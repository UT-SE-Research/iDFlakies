{
  "time": {
    "startTime": 1691703108432,
    "endTime": 1691703246543,
    "elapsedSeconds": 138.11100006103516
  },
  "expectedRun": {
    "id": "1691703106818-e832020c-8ba8-4260-aa9d-cf56d2bac854",
    "testOrder": [
      "com.github.kevinsawicki.http.EncodeTest.encodeMalformedUri",
      "com.github.kevinsawicki.http.EncodeTest.encode",
      "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath",
      "com.github.kevinsawicki.http.HttpRequestTest.getParameterFromMissingHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams",
      "com.github.kevinsawicki.http.HttpRequestTest.numberHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.getBufferedReader",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrlCause",
      "com.github.kevinsawicki.http.HttpRequestTest.refererHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.getNonEmptyString",
      "com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath",
      "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart",
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray",
      "com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream",
      "com.github.kevinsawicki.http.HttpRequestTest.getNoContent",
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipleFiles",
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendInputStream",
      "com.github.kevinsawicki.http.HttpRequestTest.postEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.postFormWithNoCharset",
      "com.github.kevinsawicki.http.HttpRequestTest.chunkPost",
      "com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.optionsEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.receiveAppendable",
      "com.github.kevinsawicki.http.HttpRequestTest.putEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent",
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader",
      "com.github.kevinsawicki.http.HttpRequestTest.eTagHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.receiveWriter",
      "com.github.kevinsawicki.http.HttpRequestTest.getError",
      "com.github.kevinsawicki.http.HttpRequestTest.receiveFile",
      "com.github.kevinsawicki.http.HttpRequestTest.locationHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.noError",
      "com.github.kevinsawicki.http.HttpRequestTest.serverHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithNumericQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.headEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.ifModifiedSinceHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders",
      "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory",
      "com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse",
      "com.github.kevinsawicki.http.HttpRequestTest.userAgentHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.getGzipped",
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader",
      "com.github.kevinsawicki.http.HttpRequestTest.getBytes",
      "com.github.kevinsawicki.http.HttpRequestTest.appendArrayQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.optionsUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipartWithContentType",
      "com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue",
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile",
      "com.github.kevinsawicki.http.HttpRequestTest.notModifiedCode",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharsetAsSecondParam",
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters",
      "com.github.kevinsawicki.http.HttpRequestTest.getSingleParameterQuoted",
      "com.github.kevinsawicki.http.HttpRequestTest.headUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.deleteUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.sendHeadersWithoutCode",
      "com.github.kevinsawicki.http.HttpRequestTest.lastModifiedHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory",
      "com.github.kevinsawicki.http.HttpRequestTest.headers",
      "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication",
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipart",
      "com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream",
      "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.negativeBufferSize",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString",
      "com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.nullUploadProgress",
      "com.github.kevinsawicki.http.HttpRequestTest.getToOutputBodyWithCharset",
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams",
      "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory",
      "com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm",
      "com.github.kevinsawicki.http.HttpRequestTest.acceptJson",
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues",
      "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrl",
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.sendErrorReadStream",
      "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.putUrlEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.dateHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.getHeaders",
      "com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.requestContentType",
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues",
      "com.github.kevinsawicki.http.HttpRequestTest.appendOddNumberOfParams",
      "com.github.kevinsawicki.http.HttpRequestTest.postForm",
      "com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders",
      "com.github.kevinsawicki.http.HttpRequestTest.requestContentTypeEmptyCharset",
      "com.github.kevinsawicki.http.HttpRequestTest.bodyOfNonEmptyErrorResponse",
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend",
      "com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled",
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyHeaders",
      "com.github.kevinsawicki.http.HttpRequestTest.sendIntHeaderWithoutCode",
      "com.github.kevinsawicki.http.HttpRequestTest.cacheControlHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse",
      "com.github.kevinsawicki.http.HttpRequestTest.sendDateHeaderWithoutCode",
      "com.github.kevinsawicki.http.HttpRequestTest.getMultipleParametersQuoted",
      "com.github.kevinsawicki.http.HttpRequestTest.getReader",
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode",
      "com.github.kevinsawicki.http.HttpRequestTest.acceptHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.httpTrust",
      "com.github.kevinsawicki.http.HttpRequestTest.malformedIntHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters",
      "com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.missingDateHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.serverErrorCode",
      "com.github.kevinsawicki.http.HttpRequestTest.getMissingParameter",
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication",
      "com.github.kevinsawicki.http.HttpRequestTest.httpsTrust",
      "com.github.kevinsawicki.http.HttpRequestTest.getParameters",
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.getEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.badRequestCode",
      "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries",
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter",
      "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath",
      "com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset",
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithNoPath",
      "com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode",
      "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts",
      "com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader",
      "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharset",
      "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams",
      "com.github.kevinsawicki.http.HttpRequestTest.traceEmpty",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithLength",
      "com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter",
      "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams"
    ],
    "results": {
      "com.github.kevinsawicki.http.HttpRequestTest.headUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headUrlEmpty",
        "result": "PASS",
        "time": 0.00042788,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream",
        "result": "PASS",
        "time": 0.001045794,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipart": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postMultipart",
        "result": "PASS",
        "time": 0.001143028,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
        "result": "ERROR",
        "time": 0.000515775,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams(HttpRequestTest.java:2500)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipartWithContentType": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postMultipartWithContentType",
        "result": "PASS",
        "time": 0.000477527,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams",
        "result": "ERROR",
        "time": 0.00074285,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams(HttpRequestTest.java:2723)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader",
        "result": "PASS",
        "time": 0.000374657,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.ifModifiedSinceHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.ifModifiedSinceHeader",
        "result": "PASS",
        "time": 0.001748957,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.serverErrorCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.serverErrorCode",
        "result": "PASS",
        "time": 0.000260771,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues",
        "result": "PASS",
        "time": 2.6158e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getMultipleParametersQuoted": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getMultipleParametersQuoted",
        "result": "PASS",
        "time": 0.000325919,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams",
        "result": "PASS",
        "time": 0.000344045,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader",
        "result": "PASS",
        "time": 0.000320772,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.httpsTrust": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.httpsTrust",
        "result": "PASS",
        "time": 3.1874e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithNoPath": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithNoPath",
        "result": "PASS",
        "time": 2.4779e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.locationHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.locationHeader",
        "result": "PASS",
        "time": 0.000382289,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders",
        "result": "PASS",
        "time": 0.000676303,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader",
        "result": "PASS",
        "time": 0.000287638,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.receiveAppendable": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.receiveAppendable",
        "result": "PASS",
        "time": 0.001754599,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader",
        "result": "PASS",
        "time": 0.000337966,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.EncodeTest.encodeMalformedUri": {
        "name": "com.github.kevinsawicki.http.EncodeTest.encodeMalformedUri",
        "result": "PASS",
        "time": 0.002152378,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile",
        "result": "PASS",
        "time": 0.000501533,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000548796,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams(HttpRequestTest.java:3024)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue",
        "result": "PASS",
        "time": 0.000413328,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode",
        "result": "FAILURE",
        "time": 0.001076484,
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:125)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode(HttpRequestTest.java:307)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse",
        "result": "PASS",
        "time": 0.000365895,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getSingleParameterQuoted": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getSingleParameterQuoted",
        "result": "PASS",
        "time": 0.00032228,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.deleteUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.deleteUrlEmpty",
        "result": "PASS",
        "time": 0.000303974,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postFormWithNoCharset": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postFormWithNoCharset",
        "result": "PASS",
        "time": 0.001430731,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendInputStream": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendInputStream",
        "result": "PASS",
        "time": 0.000980205,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharsetAsSecondParam": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharsetAsSecondParam",
        "result": "PASS",
        "time": 0.000524132,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory",
        "result": "PASS",
        "time": 0.000478679,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putEmpty",
        "result": "PASS",
        "time": 0.000392333,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getError": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getError",
        "result": "PASS",
        "time": 0.000648007,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.requestContentType": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.requestContentType",
        "result": "PASS",
        "time": 0.000427071,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath",
        "result": "PASS",
        "time": 5.7074e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.noError": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.noError",
        "result": "PASS",
        "time": 0.000393246,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend",
        "result": "PASS",
        "time": 0.000784326,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm",
        "result": "PASS",
        "time": 0.000336687,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleVarargsQueryParams",
        "result": "PASS",
        "time": 4.5658e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getParameterFromMissingHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getParameterFromMissingHeader",
        "result": "PASS",
        "time": 0.021788243,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent",
        "result": "PASS",
        "time": 0.000696926,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.refererHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.refererHeader",
        "result": "PASS",
        "time": 0.000466568,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams",
        "result": "ERROR",
        "time": 0.000532456,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams(HttpRequestTest.java:2969)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.nullUploadProgress": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.nullUploadProgress",
        "result": "PASS",
        "time": 0.000469143,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues",
        "result": "PASS",
        "time": 2.3983e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyMappedQueryParams",
        "result": "PASS",
        "time": 1.9088e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart",
        "result": "PASS",
        "time": 4.1927e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty",
        "result": "PASS",
        "time": 0.000563432,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams",
        "result": "PASS",
        "time": 0.000482593,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader",
        "result": "PASS",
        "time": 0.000388153,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getBufferedReader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getBufferedReader",
        "result": "PASS",
        "time": 0.005388787,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters",
        "result": "PASS",
        "time": 0.000380244,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postMultipleFiles": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postMultipleFiles",
        "result": "PASS",
        "time": 0.00171874,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithLength": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithLength",
        "result": "PASS",
        "time": 0.00147582,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.receiveWriter": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.receiveWriter",
        "result": "PASS",
        "time": 0.000757149,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.EncodeTest.encode": {
        "name": "com.github.kevinsawicki.http.EncodeTest.encode",
        "result": "PASS",
        "time": 0.007812415,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams",
        "result": "ERROR",
        "time": 0.000502516,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams(HttpRequestTest.java:2833)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray",
        "result": "PASS",
        "time": 0.006613727,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams",
        "result": "PASS",
        "time": 0.00012896,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.headers": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headers",
        "result": "PASS",
        "time": 0.000368145,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.serverHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.serverHeader",
        "result": "PASS",
        "time": 0.000364419,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.traceEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.traceEmpty",
        "result": "PASS",
        "time": 0.000393679,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000697847,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams(HttpRequestTest.java:2749)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendIntHeaderWithoutCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendIntHeaderWithoutCode",
        "result": "PASS",
        "time": 0.000525435,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getToOutputBodyWithCharset": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getToOutputBodyWithCharset",
        "result": "PASS",
        "time": 0.00038499,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getHeaders": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getHeaders",
        "result": "PASS",
        "time": 0.000426967,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postEmpty",
        "result": "PASS",
        "time": 0.000567301,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter",
        "result": "PASS",
        "time": 0.000281484,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithNumericQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithNumericQueryParams",
        "result": "PASS",
        "time": 0.000546914,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams",
        "result": "PASS",
        "time": 0.000377096,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrlCause": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrlCause",
        "result": "PASS",
        "time": 6.7648e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getEmptyHeaders": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getEmptyHeaders",
        "result": "PASS",
        "time": 0.000353333,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams",
        "result": "PASS",
        "time": 3.2719e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.lastModifiedHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.lastModifiedHeader",
        "result": "PASS",
        "time": 0.000393118,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.optionsEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.optionsEmpty",
        "result": "PASS",
        "time": 0.000547174,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts",
        "result": "ERROR",
        "time": 0.000198869,
        "stackTrace": [
          "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts(HttpRequestTest.java:1797)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication",
        "result": "PASS",
        "time": 0.000401762,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.chunkPost": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.chunkPost",
        "result": "PASS",
        "time": 0.001943128,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getBytes": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getBytes",
        "result": "PASS",
        "time": 0.000416296,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter",
        "result": "PASS",
        "time": 0.000351745,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams",
        "result": "PASS",
        "time": 0.000340449,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath",
        "result": "PASS",
        "time": 0.000354172,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams",
        "result": "PASS",
        "time": 0.002584651,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.eTagHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.eTagHeader",
        "result": "PASS",
        "time": 0.000439347,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.negativeBufferSize": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.negativeBufferSize",
        "result": "PASS",
        "time": 5.3096e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getNonEmptyString": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getNonEmptyString",
        "result": "PASS",
        "time": 0.000882767,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000503233,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams(HttpRequestTest.java:2804)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled",
        "result": "PASS",
        "time": 0.000411971,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream",
        "result": "PASS",
        "time": 0.000137343,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.malformedIntHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.malformedIntHeader",
        "result": "PASS",
        "time": 0.00034237,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader",
        "result": "PASS",
        "time": 0.000538444,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharset": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithResponseCharset",
        "result": "PASS",
        "time": 0.000325726,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000652453,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams(HttpRequestTest.java:2639)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams",
        "result": "ERROR",
        "time": 0.00072008,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams(HttpRequestTest.java:2778)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams",
        "result": "PASS",
        "time": 2.5072e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.optionsUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.optionsUrlEmpty",
        "result": "PASS",
        "time": 0.000328838,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode",
        "result": "PASS",
        "time": 0.000255823,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.numberHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.numberHeader",
        "result": "PASS",
        "time": 0.000809614,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postForm": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postForm",
        "result": "PASS",
        "time": 0.000509421,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendDateHeaderWithoutCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendDateHeaderWithoutCode",
        "result": "PASS",
        "time": 0.000333266,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString",
        "result": "PASS",
        "time": 0.000394819,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty",
        "result": "PASS",
        "time": 0.000436785,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader",
        "result": "PASS",
        "time": 0.000308905,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.httpTrust": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.httpTrust",
        "result": "PASS",
        "time": 3.704e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.cacheControlHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.cacheControlHeader",
        "result": "PASS",
        "time": 0.000376534,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendEmptyVarargsQueryParams",
        "result": "PASS",
        "time": 3.7845e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.headEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.headEmpty",
        "result": "PASS",
        "time": 0.00033797,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory",
        "result": "PASS",
        "time": 0.000404718,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.badRequestCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.badRequestCode",
        "result": "PASS",
        "time": 0.000311654,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.acceptJson": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.acceptJson",
        "result": "PASS",
        "time": 0.000409051,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrl": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.malformedStringUrl",
        "result": "PASS",
        "time": 6.7379e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.bodyOfNonEmptyErrorResponse": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.bodyOfNonEmptyErrorResponse",
        "result": "PASS",
        "time": 0.000425028,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries",
        "result": "PASS",
        "time": 0.000373121,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getParameters": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getParameters",
        "result": "PASS",
        "time": 0.000339206,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse",
        "result": "PASS",
        "time": 0.000360758,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams",
        "result": "PASS",
        "time": 2.8453e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getNoContent": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getNoContent",
        "result": "PASS",
        "time": 0.000855766,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendArrayQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendArrayQueryParams",
        "result": "PASS",
        "time": 6.8064e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders",
        "result": "PASS",
        "time": 0.000261027,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader",
        "result": "PASS",
        "time": 0.000741457,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams",
        "result": "PASS",
        "time": 0.000450194,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getEmpty",
        "result": "PASS",
        "time": 0.000326766,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset",
        "result": "PASS",
        "time": 0.000366326,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getGzipped": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getGzipped",
        "result": "PASS",
        "time": 0.000994464,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath",
        "result": "PASS",
        "time": 2.4058e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000547076,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams(HttpRequestTest.java:2859)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedVarargsQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedVarargsQueryParams",
        "result": "ERROR",
        "time": 0.000488337,
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:93)",
          "org.junit.Assert.failNotEquals(Assert.java:647)",
          "org.junit.Assert.assertEquals(Assert.java:128)",
          "org.junit.Assert.assertEquals(Assert.java:147)",
          "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedVarargsQueryParams(HttpRequestTest.java:2555)",
          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)",
          "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)",
          "org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:24)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:300)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:157)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:136)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendHeadersWithoutCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendHeadersWithoutCode",
        "result": "PASS",
        "time": 0.000439943,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.userAgentHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.userAgentHeader",
        "result": "PASS",
        "time": 0.000367065,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams",
        "result": "PASS",
        "time": 0.000220135,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier",
        "result": "PASS",
        "time": 0.047898959,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication",
        "result": "PASS",
        "time": 0.014223472,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters",
        "result": "PASS",
        "time": 0.000286548,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader",
        "result": "PASS",
        "time": 0.001013943,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.receiveFile": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.receiveFile",
        "result": "PASS",
        "time": 0.000694103,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.sendErrorReadStream": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.sendErrorReadStream",
        "result": "PASS",
        "time": 0.000136855,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.requestContentTypeEmptyCharset": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.requestContentTypeEmptyCharset",
        "result": "PASS",
        "time": 0.000318703,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.notModifiedCode": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.notModifiedCode",
        "result": "PASS",
        "time": 0.000346522,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getMissingParameter": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getMissingParameter",
        "result": "PASS",
        "time": 0.000332082,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.dateHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.dateHeader",
        "result": "PASS",
        "time": 0.000399569,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.acceptHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.acceptHeader",
        "result": "PASS",
        "time": 0.000370747,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory",
        "result": "PASS",
        "time": 0.00039902,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.putUrlEmpty": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.putUrlEmpty",
        "result": "PASS",
        "time": 0.000435359,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.getReader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.getReader",
        "result": "PASS",
        "time": 0.0004066,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams",
        "result": "PASS",
        "time": 0.000557891,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams",
        "result": "PASS",
        "time": 0.000378368,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.appendOddNumberOfParams": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.appendOddNumberOfParams",
        "result": "PASS",
        "time": 3.4713e-05,
        "stackTrace": []
      },
      "com.github.kevinsawicki.http.HttpRequestTest.missingDateHeader": {
        "name": "com.github.kevinsawicki.http.HttpRequestTest.missingDateHeader",
        "result": "PASS",
        "time": 0.000265673,
        "stackTrace": []
      }
    }
  },
  "expected": "ERROR",
  "dependentTest": "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
  "polluters": [
    {
      "time": {
        "startTime": 1691703109389,
        "endTime": 1691703117132,
        "elapsedSeconds": 7.743000030517578
      },
      "index": 0,
      "deps": [
        "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
      ],
      "cleanerData": {
        "dependentTest": "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
        "time": {
          "addTime": {
            "startTime": 1691703117138,
            "endTime": 1691703119996,
            "elapsedSeconds": 2.8580000400543213
          },
          "totalTime": {
            "startTime": 1691703117138,
            "endTime": 1691703239312,
            "elapsedSeconds": 122.17400002479553
          }
        },
        "expected": "ERROR",
        "isolationResult": "PASS",
        "cleaners": [
          {
            "dependentTest": "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
            "originalSize": 59,
            "cleanerTests": [
              "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
            ],
            "orderFound": 0,
            "time": {
              "addTime": {
                "startTime": 1691703117138,
                "endTime": 1691703119996,
                "elapsedSeconds": 2.8580000400543213
              },
              "totalTime": {
                "startTime": 1691703117138,
                "endTime": 1691703239312,
                "elapsedSeconds": 122.17400002479553
              }
            }
          }
        ]
      }
    }
  ],
  "hash": "b9ce25cb22a453860a16b1588b971ca1",
  "flakyClass": "OD"
}
