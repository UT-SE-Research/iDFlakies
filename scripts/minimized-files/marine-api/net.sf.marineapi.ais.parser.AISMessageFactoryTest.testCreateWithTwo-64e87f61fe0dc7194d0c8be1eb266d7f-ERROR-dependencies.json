{
  "time": {
    "startTime": 1704497091642,
    "endTime": 1704497464358,
    "elapsedSeconds": 372.71600008010864
  },
  "expectedRun": {
    "id": "1704497090659-aa6f6bc3-06aa-4d47-9fe8-26ce27c61331",
    "testOrder": [
      "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithNonZeroValues",
      "net.sf.marineapi.nmea.parser.WPLTest.testGetWaypoint",
      "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithZeroValues",
      "net.sf.marineapi.nmea.parser.WPLTest.testConstructor",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaMode",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetSpeed",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetTime",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetMonth",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetCorrectedCourse",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetPosition",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDirectionOfVariation",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetCourse",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetPosition",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetTime",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDate",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDay",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetFaaMode",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetCourse",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDataStatus",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetVariation",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetYear",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetMagneticVariation",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaModeWhenOmitted",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariationWithInvalidDirection",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetSpeed",
      "net.sf.marineapi.nmea.parser.RMCTest.testConstructor",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDataStatus",
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDate",
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariation",
      "net.sf.marineapi.nmea.parser.VHWTest.testSetHeading",
      "net.sf.marineapi.nmea.parser.VHWTest.testSetMagneticHeading",
      "net.sf.marineapi.nmea.parser.VHWTest.testGetMagneticHeading",
      "net.sf.marineapi.nmea.parser.VHWTest.testConstructorString",
      "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKilometres",
      "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKnots",
      "net.sf.marineapi.nmea.parser.VHWTest.testGetHeading",
      "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKilometres",
      "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKnots",
      "net.sf.marineapi.nmea.parser.VHWTest.testIsTrue",
      "net.sf.marineapi.nmea.parser.VHWTest.testConstructorTalkerId",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetYear",
      "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneHours",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetDate",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneHours",
      "net.sf.marineapi.nmea.parser.ZDATest.testToDate",
      "net.sf.marineapi.nmea.parser.ZDATest.testSetTime",
      "net.sf.marineapi.nmea.parser.ZDATest.testSetTimeAndLocalZone",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetMonth",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetDay",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneMinutes",
      "net.sf.marineapi.nmea.parser.ZDATest.testGetTime",
      "net.sf.marineapi.nmea.parser.ZDATest.testConstructor",
      "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneMinutes",
      "net.sf.marineapi.nmea.parser.ZDATest.testSetDate",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseUnknownId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrNormalLengthProprietaryId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortestPossibleProprietaryId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortProprietaryId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseKnownId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrStandardId",
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrLongestPossibleProprietaryId",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOverride",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderAngle",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRateOfTurnForHeadingChanges",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetTurnMode",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOffHeadinStatus",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetSteeringMode",
      "net.sf.marineapi.nmea.parser.HTDTest.testIsHeadingReferenceInUseTrue",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOffTrackStatus",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedHeadingToSteer",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRadiusOfTurnForHEadingChanges",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderStatus",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffTrackLimit",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetHeading",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffHeadingLimit",
      "net.sf.marineapi.nmea.parser.HTDTest.testIsTrue",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderDirection",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedTrack",
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderLimit",
      "net.sf.marineapi.nmea.parser.HTDTest.testConstructor",
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseUnknown",
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseProprietary",
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseAIS",
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParse",
      "net.sf.marineapi.nmea.parser.MWVTest.testGetAngle",
      "net.sf.marineapi.nmea.parser.MWVTest.testIsTrue",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetAngle",
      "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeedUnit",
      "net.sf.marineapi.nmea.parser.MWVTest.testGetStatus",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeSpeed",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetStatus",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetTrue",
      "net.sf.marineapi.nmea.parser.MWVTest.testMWVParserTalkerId",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetAngleOutOfRange",
      "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeed",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeed",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeedUnit",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetInvalidSpeedUnit",
      "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeAngle",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetTime",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetSpeed",
      "net.sf.marineapi.nmea.parser.TTMTest.testConstructor",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetCourse",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetSpeed",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetDistanceOfCPA",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetDistance",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetName",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetCourse",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceFalse",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetTimeToCPA",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetAcquisitionType",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetNumber",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceTrue",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetDistance",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetBearing",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetNumber",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetAcquisitionType",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetStatus",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetTime",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetBearing",
      "net.sf.marineapi.nmea.parser.TTMTest.testSetDistanceOfCPA",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetName",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetStatus",
      "net.sf.marineapi.nmea.parser.TTMTest.testGetTimeToCPA",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetGroundSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetTravWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetLongWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetTravGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetWaterSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserTalkerId",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetTravGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetLongGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserString",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetWaterSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetTravWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetLongWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetLongGroundSpeed",
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetGroundSpeedStatus",
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeedStatus",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndex",
      "net.sf.marineapi.nmea.parser.TXTTest.testStringConstructor",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessage",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndexThrows",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageNonASCII",
      "net.sf.marineapi.nmea.parser.TXTTest.testTalkerIdConstructor",
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageIndex",
      "net.sf.marineapi.nmea.parser.TXTTest.testGetIndentifier",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCount",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetIndentifier",
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageCount",
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCountThrows",
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessage",
      "net.sf.marineapi.nmea.parser.MMBTest.testSetBars",
      "net.sf.marineapi.nmea.parser.MMBTest.testGetBars",
      "net.sf.marineapi.nmea.parser.MMBTest.testConstructors",
      "net.sf.marineapi.nmea.parser.MMBTest.testGetInchesOfMercury",
      "net.sf.marineapi.nmea.parser.MMBTest.testSetInchesOfMercury",
      "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPoint",
      "net.sf.marineapi.nmea.parser.MHUTest.testGetAbsoluteHumidity",
      "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPointUnit",
      "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPointUnit",
      "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPoint",
      "net.sf.marineapi.nmea.parser.MHUTest.testGetRelativeHumidity",
      "net.sf.marineapi.nmea.parser.MHUTest.testSetRelativeHumidity",
      "net.sf.marineapi.nmea.parser.MHUTest.testSetAbsoluteHumidity",
      "net.sf.marineapi.nmea.parser.MHUTest.testEmptySentenceConstructor",
      "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeight",
      "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellites",
      "net.sf.marineapi.nmea.parser.GGATest.testConstructor",
      "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsAge",
      "net.sf.marineapi.nmea.parser.GGATest.testGetAltitudeUnits",
      "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsAge",
      "net.sf.marineapi.nmea.parser.GGATest.testGetPosition",
      "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellitesThrows",
      "net.sf.marineapi.nmea.parser.GGATest.testSetAltitudeUnits",
      "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsStationId",
      "net.sf.marineapi.nmea.parser.GGATest.testSetFixQuality",
      "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeightUnits",
      "net.sf.marineapi.nmea.parser.GGATest.testGetTime",
      "net.sf.marineapi.nmea.parser.GGATest.testGetNumberOfSatellites",
      "net.sf.marineapi.nmea.parser.GGATest.testSetHorizontalDOP",
      "net.sf.marineapi.nmea.parser.GGATest.testGetFixQuality",
      "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsStationId",
      "net.sf.marineapi.nmea.parser.GGATest.testSetPosition",
      "net.sf.marineapi.nmea.parser.GGATest.testGetHorizontalDOP",
      "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeight",
      "net.sf.marineapi.nmea.parser.GGATest.testSetTime",
      "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeightUnits",
      "net.sf.marineapi.nmea.parser.GGATest.testGGAParser",
      "net.sf.marineapi.nmea.parser.GGATest.testGetAltitude",
      "net.sf.marineapi.nmea.parser.GGATest.testSetAltitude",
      "net.sf.marineapi.ais.util.Latitude27Test.conversionReturnsOnInvalidValues",
      "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.minValueIsAvailable",
      "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotAvailable",
      "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotAvailable",
      "net.sf.marineapi.ais.util.Latitude27Test.minValueIsCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.zeroIsCorrect",
      "net.sf.marineapi.ais.util.Latitude27Test.conversionToKnotsWorks",
      "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsNotAvailable",
      "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsAvailable",
      "net.sf.marineapi.ais.util.Latitude27Test.zeroIsAvailable",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder",
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener",
      "net.sf.marineapi.nmea.parser.DBTTest.testSetFathoms",
      "net.sf.marineapi.nmea.parser.DBTTest.testGetFathoms",
      "net.sf.marineapi.nmea.parser.DBTTest.testGetFeet",
      "net.sf.marineapi.nmea.parser.DBTTest.testConstructor",
      "net.sf.marineapi.nmea.parser.DBTTest.testSetMeters",
      "net.sf.marineapi.nmea.parser.DBTTest.testSetFeet",
      "net.sf.marineapi.nmea.parser.DBTTest.testGetMeters",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfo",
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteCount",
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteInfo",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceIndex",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceCount",
      "net.sf.marineapi.nmea.parser.GSVTest.testIsFirst",
      "net.sf.marineapi.nmea.parser.GSVTest.testConstructor",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteCount",
      "net.sf.marineapi.nmea.parser.GSVTest.testIsLast",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithEmptyFields",
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithShortSentence",
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSentenceCount",
      "net.sf.marineapi.nmea.parser.GSVTest.testParserGlonassGSV",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLatitude",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLongitude",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTrueHeading",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getRateOfTurn",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLatitudeInDegrees",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasRateOfTurn",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasTimeStamp",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasCourseOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLongitudeInDegrees",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getManouverIndicator",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getCourseOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTimeStamp",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getSpeedOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getNavigationalStatus",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getPositionAccuracy",
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasSpeedOverGround",
      "net.sf.marineapi.nmea.parser.VDMTest.testToStringWithAIS",
      "net.sf.marineapi.nmea.parser.VDMTest.testIsLastFragment",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetFragmentNumber",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetFillBits",
      "net.sf.marineapi.nmea.parser.VDMTest.testIsFirstFragment",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetNumberOfFragments",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetRadioChannel",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetMessageId",
      "net.sf.marineapi.nmea.parser.VDMTest.testIsFragmented",
      "net.sf.marineapi.nmea.parser.VDMTest.testGetPayload",
      "net.sf.marineapi.nmea.parser.VDMTest.testIsPartOfMessage",
      "net.sf.marineapi.nmea.parser.VDMTest.testVDMParserTalkerId",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsProprietary",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithWrongType",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNullType",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithCustomParser",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithUnsupportedTalker",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithValidIndex",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNulls",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceAll",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNonEqual",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithSelf",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValue",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetTalkerId",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToString",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLength",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsValid",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNull",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithProprietary",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetBeginChar",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptyProprietary",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigherByOne",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptySentence",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEquals",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigher",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDO",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueWithPrecision",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDM",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetSentenceId",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValue",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithEmptyFields",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceTail",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithInvalidSentence",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLower",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthOnLimit",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithInvalidValue",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithIndexGreaterThanAllowed",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthExceeded",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLowerByOne",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithNegativeIndex",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetCharValueWithEmptyFields",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueJDK7RoundingIssue",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetIntValueWithLeading",
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithEmptyFields",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructor",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithOtherSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithExpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithUnexpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithUnexpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrows",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithExpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructor",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithUnexpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrowsWhenExtended",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithExpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorWhenExtended",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithExpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithExpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithUnexpectedSentence",
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructorWhenExtended",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetPseudoRangeResidualsRMS",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMinorError",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetPseudoRangeResidualsRMS",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetTime",
      "net.sf.marineapi.nmea.parser.GSTTest.testGSTParser",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetAltitudeError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetLongitudeError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMajorError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMinorError",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetErrorEllipseOrientation",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetLatitudeError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetErrorEllipseOrientation",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMajorError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetLatitudeError",
      "net.sf.marineapi.nmea.parser.GSTTest.testConstructor",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetLongitudeError",
      "net.sf.marineapi.nmea.parser.GSTTest.testSetTime",
      "net.sf.marineapi.nmea.parser.GSTTest.testGetAltitudeError",
      "net.sf.marineapi.nmea.parser.HDMTest.testConstructor",
      "net.sf.marineapi.nmea.parser.HDMTest.testIsTrue",
      "net.sf.marineapi.nmea.parser.HDMTest.testSetHeading",
      "net.sf.marineapi.nmea.parser.HDMTest.testSetNegativeHeading",
      "net.sf.marineapi.nmea.parser.HDMTest.testSetHeadingTooHigh",
      "net.sf.marineapi.nmea.parser.HDMTest.testGetHeading",
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithLegacyRMC",
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGGA",
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGLL",
      "net.sf.marineapi.nmea.parser.APBTest.testGetSteerTo",
      "net.sf.marineapi.nmea.parser.APBTest.testIsHeadingToDestinationTrue",
      "net.sf.marineapi.nmea.parser.APBTest.testAPBParserTalkerId",
      "net.sf.marineapi.nmea.parser.APBTest.testGetCycleLockStatus",
      "net.sf.marineapi.nmea.parser.APBTest.testAPBParserString",
      "net.sf.marineapi.nmea.parser.APBTest.testGetBearingPositionToDestination",
      "net.sf.marineapi.nmea.parser.APBTest.testIsPerpendicularPassed",
      "net.sf.marineapi.nmea.parser.APBTest.testIsBearingPositionToDestinationTrue",
      "net.sf.marineapi.nmea.parser.APBTest.testIsBearingOriginToDestionationTrue",
      "net.sf.marineapi.nmea.parser.APBTest.testGetStatus",
      "net.sf.marineapi.nmea.parser.APBTest.testGetBearingOriginToDestination",
      "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackError",
      "net.sf.marineapi.nmea.parser.APBTest.testGetDestionationWaypointId",
      "net.sf.marineapi.nmea.parser.APBTest.testIsArrivalCircleEntered",
      "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackUnits",
      "net.sf.marineapi.nmea.parser.APBTest.testGetHeadingToDestionation",
      "net.sf.marineapi.nmea.parser.APBTest.testSetArrivalCircleEntered",
      "net.sf.marineapi.nmea.parser.VDRTest.testGetTrueDirection",
      "net.sf.marineapi.nmea.parser.VDRTest.testSetSpeed",
      "net.sf.marineapi.nmea.parser.VDRTest.testGetMagneticDirection",
      "net.sf.marineapi.nmea.parser.VDRTest.testGetSpeed",
      "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserTalkerId",
      "net.sf.marineapi.nmea.parser.VDRTest.testSetTrueDirection",
      "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserString",
      "net.sf.marineapi.nmea.parser.VDRTest.testSetMagneticDirection",
      "net.sf.marineapi.nmea.util.DateTest.testToStringTwoDigitYear",
      "net.sf.marineapi.nmea.util.DateTest.testEqualsItself",
      "net.sf.marineapi.nmea.util.DateTest.testSetYearNegative",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndPositiveOffset",
      "net.sf.marineapi.nmea.util.DateTest.testSetMonth",
      "net.sf.marineapi.nmea.util.DateTest.testSetMonthOutOfBounds",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601FourDigitYear",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndNegativeOffset",
      "net.sf.marineapi.nmea.util.DateTest.testSetDayOutOfBounds",
      "net.sf.marineapi.nmea.util.DateTest.testGetDay",
      "net.sf.marineapi.nmea.util.DateTest.testConstructorWithValues",
      "net.sf.marineapi.nmea.util.DateTest.testGetYear",
      "net.sf.marineapi.nmea.util.DateTest.testSetYearFourDigit",
      "net.sf.marineapi.nmea.util.DateTest.testConstructorWithString",
      "net.sf.marineapi.nmea.util.DateTest.testSetYearThreeDigits",
      "net.sf.marineapi.nmea.util.DateTest.testToStringFourDigitYear",
      "net.sf.marineapi.nmea.util.DateTest.testConstructor",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601TwoDigitYear",
      "net.sf.marineapi.nmea.util.DateTest.testEqualsWhenChanged",
      "net.sf.marineapi.nmea.util.DateTest.testGetMonth",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTime",
      "net.sf.marineapi.nmea.util.DateTest.testEqualsWrongType",
      "net.sf.marineapi.nmea.util.DateTest.testSetDay",
      "net.sf.marineapi.nmea.util.DateTest.testSetYearTwoDigit",
      "net.sf.marineapi.nmea.util.DateTest.testSetYearFiveDigits",
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndZeroZone",
      "net.sf.marineapi.nmea.util.DateTest.testEqualsAfterInit",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStarboard",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getSerialNumber",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPort",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStern",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getUnitModelCode",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getCallSign",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getBow",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getVendorId",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getTypeOfShipAndCargoType",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPartNumber",
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getName",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasSpeedOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getSpeedOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLongitudeInDegrees",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLatitude",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasCourseOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTimeStamp",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasTimeStamp",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLongitude",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getPositionAccuracy",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getCourseOverGround",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTrueHeading",
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLatitudeInDegrees",
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTripUnits",
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTotalUnits",
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTripUnits",
      "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserString",
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTotalUnits",
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTotal",
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTotal",
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTrip",
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTrip",
      "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserTalkerId",
      "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumSubCode",
      "net.sf.marineapi.nmea.parser.DTMTest.testSetLongitudeOffset",
      "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserTalkerId",
      "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumCode",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetLatitudeOffset",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumCode",
      "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserString",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetLongitudeOffset",
      "net.sf.marineapi.nmea.parser.DTMTest.testSetLatitudeOffset",
      "net.sf.marineapi.nmea.parser.DTMTest.testSetName",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumSubCode",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetAltitudeOffset",
      "net.sf.marineapi.nmea.parser.DTMTest.testGetName",
      "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate",
      "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo"
    ],
    "results": {
      "net.sf.marineapi.nmea.parser.HDMTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testConstructor",
        "result": "PASS",
        "time": 4.1943e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPointUnit": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPointUnit",
        "result": "PASS",
        "time": 2.3913e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndexThrows": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndexThrows",
        "result": "PASS",
        "time": 4.0728e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetFaaMode": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetFaaMode",
        "result": "PASS",
        "time": 8.4001e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariation": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariation",
        "result": "PASS",
        "time": 7.4419e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithUnexpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithUnexpectedSentence",
        "result": "PASS",
        "time": 1.4342e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGGA": {
        "name": "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGGA",
        "result": "PASS",
        "time": 0.000136453,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetDistance": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetDistance",
        "result": "PASS",
        "time": 4.5333e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteCount": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteCount",
        "result": "PASS",
        "time": 8.3933e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasCourseOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasCourseOverGround",
        "result": "PASS",
        "time": 1.0887e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HDMTest.testSetNegativeHeading": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testSetNegativeHeading",
        "result": "PASS",
        "time": 1.7725e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndPositiveOffset": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndPositiveOffset",
        "result": "PASS",
        "time": 6.3725e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testIsFirstFragment": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testIsFirstFragment",
        "result": "PASS",
        "time": 0.00018208,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseUnknownId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseUnknownId",
        "result": "PASS",
        "time": 3.8368e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotAvailable",
        "result": "PASS",
        "time": 5.316e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testConstructorTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testConstructorTalkerId",
        "result": "PASS",
        "time": 4.1002e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaModeWhenOmitted": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaModeWhenOmitted",
        "result": "PASS",
        "time": 0.0002244,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetTurnMode": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetTurnMode",
        "result": "PASS",
        "time": 4.9604e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testIsTrue": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testIsTrue",
        "result": "PASS",
        "time": 3.7503e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTotal": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testGetTotal",
        "result": "PASS",
        "time": 1.4939e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeedStatus",
        "result": "PASS",
        "time": 2.3651e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testGetFathoms": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testGetFathoms",
        "result": "PASS",
        "time": 3.8709e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTime": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTime",
        "result": "PASS",
        "time": 4.8847e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceAll": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceAll",
        "result": "PASS",
        "time": 3.587e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
        "result": "PASS",
        "time": 9.9625e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceCount": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceCount",
        "result": "PASS",
        "time": 3.0233e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneHours": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneHours",
        "result": "PASS",
        "time": 5.8906e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testIsBearingOriginToDestionationTrue": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testIsBearingOriginToDestionationTrue",
        "result": "PASS",
        "time": 1.4503e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneHours": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneHours",
        "result": "PASS",
        "time": 8.7651e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetGroundSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetGroundSpeedStatus",
        "result": "PASS",
        "time": 2.0546e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetPosition": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetPosition",
        "result": "PASS",
        "time": 0.000242752,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrowsWhenExtended": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrowsWhenExtended",
        "result": "PASS",
        "time": 5.8647e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
        "result": "PASS",
        "time": 9.2608e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.conversionReturnsOnInvalidValues": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.conversionReturnsOnInvalidValues",
        "result": "PASS",
        "time": 0.000154998,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testSetHeading": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testSetHeading",
        "result": "PASS",
        "time": 0.00010942,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo": {
        "name": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
        "result": "ERROR",
        "time": 0.000234676,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.parser.AISMessageFactoryTest.<init>(AISMessageFactoryTest.java:24)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.APBTest.testIsBearingPositionToDestinationTrue": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testIsBearingPositionToDestinationTrue",
        "result": "PASS",
        "time": 1.473e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetYearFiveDigits": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetYearFiveDigits",
        "result": "PASS",
        "time": 2.7367e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testEmptySentenceConstructor": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testEmptySentenceConstructor",
        "result": "PASS",
        "time": 4.2201e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDataStatus": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetDataStatus",
        "result": "PASS",
        "time": 0.000220863,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithValidIndex": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithValidIndex",
        "result": "PASS",
        "time": 4.9984e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetHeading": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetHeading",
        "result": "PASS",
        "time": 7.258e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteCount": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteCount",
        "result": "PASS",
        "time": 3.1371e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotCorrect",
        "result": "PASS",
        "time": 5.347e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testIsHeadingToDestinationTrue": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testIsHeadingToDestinationTrue",
        "result": "PASS",
        "time": 1.6961e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrows": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorThrows",
        "result": "PASS",
        "time": 3.2508e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeAngle": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeAngle",
        "result": "PASS",
        "time": 2.5218e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithExpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithExpectedSentence",
        "result": "PASS",
        "time": 3.6572e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testMWVParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testMWVParserTalkerId",
        "result": "PASS",
        "time": 3.596e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getCourseOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getCourseOverGround",
        "result": "PASS",
        "time": 9.336e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testVDMParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testVDMParserTalkerId",
        "result": "PASS",
        "time": 5.2367e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetBearingPositionToDestination": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetBearingPositionToDestination",
        "result": "PASS",
        "time": 5.7187e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithIndexGreaterThanAllowed": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithIndexGreaterThanAllowed",
        "result": "PASS",
        "time": 5.8895e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDataStatus": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetDataStatus",
        "result": "PASS",
        "time": 7.3262e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetCycleLockStatus": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetCycleLockStatus",
        "result": "PASS",
        "time": 1.8011e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetDistanceOfCPA": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetDistanceOfCPA",
        "result": "PASS",
        "time": 8.6206e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedHeadingToSteer": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedHeadingToSteer",
        "result": "PASS",
        "time": 6.1381e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortestPossibleProprietaryId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortestPossibleProprietaryId",
        "result": "PASS",
        "time": 2.0382e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetMonth": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetMonth",
        "result": "PASS",
        "time": 4.5639e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeight": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeight",
        "result": "PASS",
        "time": 3.2403e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithUnexpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithUnexpectedSentence",
        "result": "PASS",
        "time": 0.000229795,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOffHeadinStatus": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetOffHeadinStatus",
        "result": "PASS",
        "time": 4.9711e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testSetTimeAndLocalZone": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testSetTimeAndLocalZone",
        "result": "PASS",
        "time": 0.000135966,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.WPLTest.testGetWaypoint": {
        "name": "net.sf.marineapi.nmea.parser.WPLTest.testGetWaypoint",
        "result": "PASS",
        "time": 0.000129593,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTrueHeading": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTrueHeading",
        "result": "PASS",
        "time": 6.313e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeed",
        "result": "PASS",
        "time": 6.2048e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testGetYear": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testGetYear",
        "result": "PASS",
        "time": 1.9214e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOverride": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetOverride",
        "result": "PASS",
        "time": 0.000119228,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeed",
        "result": "PASS",
        "time": 2.5027e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMajorError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMajorError",
        "result": "PASS",
        "time": 3.1637e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetFragmentNumber": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetFragmentNumber",
        "result": "PASS",
        "time": 5.706e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MMBTest.testSetBars": {
        "name": "net.sf.marineapi.nmea.parser.MMBTest.testSetBars",
        "result": "PASS",
        "time": 6.5816e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCountThrows": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCountThrows",
        "result": "PASS",
        "time": 3.4409e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetPosition": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetPosition",
        "result": "PASS",
        "time": 0.000253134,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetLongGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetLongGroundSpeed",
        "result": "PASS",
        "time": 2.5824e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetSpeed",
        "result": "PASS",
        "time": 0.00010439,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserString": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserString",
        "result": "PASS",
        "time": 1.4512e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
        "result": "PASS",
        "time": 0.000142883,
        "stackTrace": []
      },
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGLL": {
        "name": "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithGLL",
        "result": "PASS",
        "time": 9.7717e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNullType": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNullType",
        "result": "PASS",
        "time": 4.5725e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetDestionationWaypointId": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetDestionationWaypointId",
        "result": "PASS",
        "time": 1.9039e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMajorError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMajorError",
        "result": "PASS",
        "time": 4.7779e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetYearTwoDigit": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetYearTwoDigit",
        "result": "PASS",
        "time": 3.1518e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testGetTrueDirection": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testGetTrueDirection",
        "result": "PASS",
        "time": 3.244e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MMBTest.testGetBars": {
        "name": "net.sf.marineapi.nmea.parser.MMBTest.testGetBars",
        "result": "PASS",
        "time": 3.7048e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testIsLast": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testIsLast",
        "result": "PASS",
        "time": 0.000233549,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HDMTest.testSetHeading": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testSetHeading",
        "result": "PASS",
        "time": 4.8711e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testConstructor",
        "result": "PASS",
        "time": 4.0352e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTripUnits": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testSetTripUnits",
        "result": "PASS",
        "time": 3.0408e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPartNumber": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPartNumber",
        "result": "PASS",
        "time": 6.002e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetTimeToCPA": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetTimeToCPA",
        "result": "PASS",
        "time": 0.000163074,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithEmptyFields": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithEmptyFields",
        "result": "PASS",
        "time": 4.9718e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.zeroIsCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.zeroIsCorrect",
        "result": "PASS",
        "time": 4.889e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetTravGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetTravGroundSpeed",
        "result": "PASS",
        "time": 2.6696e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortProprietaryId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrShortProprietaryId",
        "result": "PASS",
        "time": 1.5267e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptyProprietary": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptyProprietary",
        "result": "PASS",
        "time": 4.8782e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getVendorId": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getVendorId",
        "result": "PASS",
        "time": 6.808e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithUnexpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithUnexpectedSentence",
        "result": "PASS",
        "time": 2.1473e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneMinutes": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testSetLocalZoneMinutes",
        "result": "PASS",
        "time": 6.5194e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasTimeStamp": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasTimeStamp",
        "result": "PASS",
        "time": 9.093e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetDay": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetDay",
        "result": "PASS",
        "time": 4.7317e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetNumber": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetNumber",
        "result": "PASS",
        "time": 0.000128758,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetLatitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetLatitudeError",
        "result": "PASS",
        "time": 6.99e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithExpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedGenericsListenerWithExpectedSentence",
        "result": "PASS",
        "time": 0.000283274,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testGetMonth": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testGetMonth",
        "result": "PASS",
        "time": 1.9391e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetSteerTo": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetSteerTo",
        "result": "PASS",
        "time": 3.636e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testGetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testGetSpeed",
        "result": "PASS",
        "time": 1.5851e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
        "result": "PASS",
        "time": 6.9592e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testSetMagneticDirection": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testSetMagneticDirection",
        "result": "PASS",
        "time": 4.5197e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrNormalLengthProprietaryId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrNormalLengthProprietaryId",
        "result": "PASS",
        "time": 1.8289e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder",
        "result": "ERROR",
        "time": 0.000246564,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetCourse": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetCourse",
        "result": "PASS",
        "time": 0.000104193,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testGetMagneticDirection": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testGetMagneticDirection",
        "result": "PASS",
        "time": 2.1652e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
        "result": "PASS",
        "time": 0.000100205,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetYearFourDigit": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetYearFourDigit",
        "result": "PASS",
        "time": 0.000591623,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeedStatus",
        "result": "PASS",
        "time": 2.1236e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetTime": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetTime",
        "result": "PASS",
        "time": 4.4013e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumCode": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumCode",
        "result": "PASS",
        "time": 1.9288e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceTail": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetStringValuesReplaceTail",
        "result": "PASS",
        "time": 4.9447e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTrueHeading": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTrueHeading",
        "result": "PASS",
        "time": 9.372e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testIsFirst": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testIsFirst",
        "result": "PASS",
        "time": 3.189e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetLongitudeOffset": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetLongitudeOffset",
        "result": "PASS",
        "time": 1.5094e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariationWithInvalidDirection": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetDirectionOfVariationWithInvalidDirection",
        "result": "PASS",
        "time": 9.8866e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDM": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDM",
        "result": "PASS",
        "time": 7.4225e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTotalUnits": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testGetTotalUnits",
        "result": "PASS",
        "time": 8.507e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTotalUnits": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testSetTotalUnits",
        "result": "PASS",
        "time": 1.3309e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testConstructorString": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testConstructorString",
        "result": "PASS",
        "time": 6.8306e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrLongestPossibleProprietaryId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrLongestPossibleProprietaryId",
        "result": "PASS",
        "time": 1.3639e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetSpeed",
        "result": "PASS",
        "time": 0.00018956,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithCustomParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithCustomParser",
        "result": "PASS",
        "time": 7.246e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetSpeed",
        "result": "PASS",
        "time": 8.0474e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLongitude": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLongitude",
        "result": "PASS",
        "time": 1.031e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDO": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithAIVDO",
        "result": "PASS",
        "time": 6.7874e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDate": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetDate",
        "result": "PASS",
        "time": 7.7368e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MMBTest.testConstructors": {
        "name": "net.sf.marineapi.nmea.parser.MMBTest.testConstructors",
        "result": "PASS",
        "time": 4.316e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetPseudoRangeResidualsRMS": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetPseudoRangeResidualsRMS",
        "result": "PASS",
        "time": 3.3226e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceTrue": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceTrue",
        "result": "PASS",
        "time": 5.0868e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNonEqual": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNonEqual",
        "result": "PASS",
        "time": 4.8188e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getUnitModelCode": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getUnitModelCode",
        "result": "PASS",
        "time": 7.492e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetCourse": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetCourse",
        "result": "PASS",
        "time": 9.0188e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testSetAbsoluteHumidity": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testSetAbsoluteHumidity",
        "result": "PASS",
        "time": 5.4755e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testConstructorWithString": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testConstructorWithString",
        "result": "PASS",
        "time": 2.5791e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testEqualsWhenChanged": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testEqualsWhenChanged",
        "result": "PASS",
        "time": 2.6095e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasSpeedOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasSpeedOverGround",
        "result": "PASS",
        "time": 1.3196e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetCourse": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetCourse",
        "result": "PASS",
        "time": 0.000137844,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetMessageId": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetMessageId",
        "result": "PASS",
        "time": 4.7618e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testSetDate": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testSetDate",
        "result": "PASS",
        "time": 0.000154859,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasTimeStamp": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasTimeStamp",
        "result": "PASS",
        "time": 8.857e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetPayload": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetPayload",
        "result": "PASS",
        "time": 0.000158031,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetAngle": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetAngle",
        "result": "PASS",
        "time": 6.3663e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetLongitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetLongitudeError",
        "result": "PASS",
        "time": 0.000139612,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKnots": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKnots",
        "result": "PASS",
        "time": 3.1554e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetBeginChar": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetBeginChar",
        "result": "PASS",
        "time": 3.5967e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithExpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsListenerWithExpectedSentence",
        "result": "PASS",
        "time": 4.5422e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithInvalidSentence": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithInvalidSentence",
        "result": "PASS",
        "time": 5.6262e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessage": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testGetMessage",
        "result": "PASS",
        "time": 3.015e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testConstructor",
        "result": "PASS",
        "time": 2.5776e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetCharValueWithEmptyFields": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetCharValueWithEmptyFields",
        "result": "PASS",
        "time": 5.3242e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithUnexpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testExtendedBasicListenerWithUnexpectedSentence",
        "result": "PASS",
        "time": 0.00012591,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetIntValueWithLeading": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetIntValueWithLeading",
        "result": "PASS",
        "time": 0.000103345,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceIndex": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSentenceIndex",
        "result": "PASS",
        "time": 3.5004e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetLongitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetLongitudeError",
        "result": "PASS",
        "time": 4.3532e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testEqualsWrongType": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testEqualsWrongType",
        "result": "PASS",
        "time": 2.8823e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructor": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructor",
        "result": "PASS",
        "time": 1.6676e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsProprietary": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsProprietary",
        "result": "PASS",
        "time": 4.3516e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMinorError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetSemiMinorError",
        "result": "PASS",
        "time": 4.0408e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithProprietary": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithProprietary",
        "result": "PASS",
        "time": 7.7812e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetAltitude": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetAltitude",
        "result": "PASS",
        "time": 6.5467e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HDMTest.testIsTrue": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testIsTrue",
        "result": "PASS",
        "time": 1.421e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserTalkerId",
        "result": "PASS",
        "time": 4.6533e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithZeroValues": {
        "name": "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithZeroValues",
        "result": "PASS",
        "time": 0.000185595,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetAltitudeOffset": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetAltitudeOffset",
        "result": "PASS",
        "time": 2.3098e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellites": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellites",
        "result": "PASS",
        "time": 7.8686e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLength": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLength",
        "result": "PASS",
        "time": 3.5662e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndZeroZone": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndZeroZone",
        "result": "PASS",
        "time": 6.59e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorWhenExtended": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructorWhenExtended",
        "result": "PASS",
        "time": 1.8628e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.largeValueIsNotAvailable",
        "result": "PASS",
        "time": 5.536e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithUnsupportedTalker": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithUnsupportedTalker",
        "result": "PASS",
        "time": 5.6634e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTrip": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testGetTrip",
        "result": "PASS",
        "time": 1.3752e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeightUnits": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetGeoidalHeightUnits",
        "result": "PASS",
        "time": 4.067e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderStatus": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderStatus",
        "result": "PASS",
        "time": 4.1694e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserString": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserString",
        "result": "PASS",
        "time": 1.5456e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrStandardId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseStrStandardId",
        "result": "PASS",
        "time": 1.2799e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetTime": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetTime",
        "result": "PASS",
        "time": 0.000104205,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLongitudeInDegrees": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLongitudeInDegrees",
        "result": "PASS",
        "time": 8.846e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseUnknown": {
        "name": "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseUnknown",
        "result": "PASS",
        "time": 3.2766e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows",
        "result": "ERROR",
        "time": 0.000371999,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testParserGlonassGSV": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testParserGlonassGSV",
        "result": "PASS",
        "time": 6.2715e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndNegativeOffset": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601WithTimeAndNegativeOffset",
        "result": "PASS",
        "time": 9.4886e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.minValueIsCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.minValueIsCorrect",
        "result": "PASS",
        "time": 5.304e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetTravWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetTravWaterSpeed",
        "result": "PASS",
        "time": 5.5397e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueJDK7RoundingIssue": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueJDK7RoundingIssue",
        "result": "PASS",
        "time": 0.001180664,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetAcquisitionType": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetAcquisitionType",
        "result": "PASS",
        "time": 0.000192615,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testEqualsItself": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testEqualsItself",
        "result": "PASS",
        "time": 2.6394e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetTrue": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetTrue",
        "result": "PASS",
        "time": 2.5338e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsCorrect",
        "result": "PASS",
        "time": 5.35e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetAngleOutOfRange": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetAngleOutOfRange",
        "result": "PASS",
        "time": 2.9076e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEquals": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testEquals",
        "result": "PASS",
        "time": 7.9303e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithSelf": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithSelf",
        "result": "PASS",
        "time": 2.004e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMinorError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetSemiMinorError",
        "result": "PASS",
        "time": 3.6571e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetWaterSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetWaterSpeedStatus",
        "result": "PASS",
        "time": 2.3263e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testTalkerIdConstructor": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testTalkerIdConstructor",
        "result": "PASS",
        "time": 4.2857e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getPositionAccuracy": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getPositionAccuracy",
        "result": "PASS",
        "time": 9.711e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetTravWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetTravWaterSpeed",
        "result": "PASS",
        "time": 2.9903e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackUnits": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackUnits",
        "result": "PASS",
        "time": 4.6479e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getNavigationalStatus": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getNavigationalStatus",
        "result": "PASS",
        "time": 8.749e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeed",
        "result": "PASS",
        "time": 5.951e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLatitudeInDegrees": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLatitudeInDegrees",
        "result": "PASS",
        "time": 1.4078e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetNumber": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetNumber",
        "result": "PASS",
        "time": 4.6699e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetTimeToCPA": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetTimeToCPA",
        "result": "PASS",
        "time": 3.8138e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getName": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getName",
        "result": "PASS",
        "time": 7.031e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageNonASCII": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageNonASCII",
        "result": "PASS",
        "time": 5.9226e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetYear": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetYear",
        "result": "PASS",
        "time": 0.00011703,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getSpeedOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getSpeedOverGround",
        "result": "PASS",
        "time": 9.84e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthExceeded": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthExceeded",
        "result": "PASS",
        "time": 6.8833e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetName": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetName",
        "result": "PASS",
        "time": 1.7882e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsAge": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsAge",
        "result": "PASS",
        "time": 7.4348e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetLongWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetLongWaterSpeed",
        "result": "PASS",
        "time": 2.6735e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetTalkerId",
        "result": "PASS",
        "time": 2.0796e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessage": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessage",
        "result": "PASS",
        "time": 4.1115e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeed",
        "result": "PASS",
        "time": 6.1836e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLatitude": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasLatitude",
        "result": "PASS",
        "time": 1.9633e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetAcquisitionType": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetAcquisitionType",
        "result": "PASS",
        "time": 4.7132e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testSetRelativeHumidity": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testSetRelativeHumidity",
        "result": "PASS",
        "time": 7.4136e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseKnownId": {
        "name": "net.sf.marineapi.nmea.sentence.SentenceIdTest.testParseKnownId",
        "result": "PASS",
        "time": 1.4854e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testVLWParserTalkerId",
        "result": "PASS",
        "time": 1.0942e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetFixQuality": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetFixQuality",
        "result": "PASS",
        "time": 0.000203633,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
        "result": "PASS",
        "time": 0.000424381,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601TwoDigitYear": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601TwoDigitYear",
        "result": "PASS",
        "time": 4.7908e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
        "result": "PASS",
        "time": 0.000908755,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKnots": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKnots",
        "result": "PASS",
        "time": 6.814e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testIsFragmented": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testIsFragmented",
        "result": "PASS",
        "time": 0.000189078,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffTrackLimit": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffTrackLimit",
        "result": "PASS",
        "time": 4.289e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructor": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testDefaultConstructor",
        "result": "PASS",
        "time": 0.000891074,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthOnLimit": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testToSentenceWithMaxLengthOnLimit",
        "result": "PASS",
        "time": 5.3324e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testGetTripUnits": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testGetTripUnits",
        "result": "PASS",
        "time": 8.46e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
        "result": "PASS",
        "time": 0.000104691,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptySentence": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorForEmptySentence",
        "result": "PASS",
        "time": 4.5061e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetPseudoRangeResidualsRMS": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetPseudoRangeResidualsRMS",
        "result": "PASS",
        "time": 6.3909e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetStatus": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetStatus",
        "result": "PASS",
        "time": 0.000176603,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigher": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigher",
        "result": "PASS",
        "time": 4.7274e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetLongWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetLongWaterSpeed",
        "result": "PASS",
        "time": 0.000246816,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testVDRParserTalkerId",
        "result": "PASS",
        "time": 3.4399e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTimeStamp": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getTimeStamp",
        "result": "PASS",
        "time": 6.738e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetFillBits": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetFillBits",
        "result": "PASS",
        "time": 5.4312e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneMinutes": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetLocalZoneMinutes",
        "result": "PASS",
        "time": 3.9931e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testIsPartOfMessage": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testIsPartOfMessage",
        "result": "PASS",
        "time": 7.0649e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithWrongType": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithWrongType",
        "result": "PASS",
        "time": 9.043e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLower": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLower",
        "result": "PASS",
        "time": 5.8944e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndex": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageIndex",
        "result": "PASS",
        "time": 5.1714e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetTime": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetTime",
        "result": "PASS",
        "time": 0.000331605,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testToString": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testToString",
        "result": "PASS",
        "time": 4.4012e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener",
        "result": "ERROR",
        "time": 0.000377128,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetSteeringMode": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetSteeringMode",
        "result": "PASS",
        "time": 0.000324918,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaMode": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetFaaMode",
        "result": "PASS",
        "time": 0.000444065,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetSternWaterSpeed",
        "result": "PASS",
        "time": 2.5628e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetTime": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetTime",
        "result": "PASS",
        "time": 5.1414e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testConstructor",
        "result": "PASS",
        "time": 3.6916e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetStatus": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetStatus",
        "result": "PASS",
        "time": 2.9557e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testAPBParserString": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testAPBParserString",
        "result": "PASS",
        "time": 1.2732e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testToDate": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testToDate",
        "result": "PASS",
        "time": 0.003125679,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithExpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testGenericsHidingListenerWithExpectedSentence",
        "result": "PASS",
        "time": 6.9433e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testEqualsAfterInit": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testEqualsAfterInit",
        "result": "PASS",
        "time": 3.6946e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsStationId": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetDgpsStationId",
        "result": "PASS",
        "time": 3.8039e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testGetAbsoluteHumidity": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testGetAbsoluteHumidity",
        "result": "PASS",
        "time": 3.1205e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetTravGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetTravGroundSpeed",
        "result": "PASS",
        "time": 6.6416e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener",
        "result": "ERROR",
        "time": 0.00023803,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageCount": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageCount",
        "result": "PASS",
        "time": 3.381e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testGetIndentifier": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testGetIndentifier",
        "result": "PASS",
        "time": 3.6723e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseAIS": {
        "name": "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseAIS",
        "result": "PASS",
        "time": 1.9454e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValue": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValue",
        "result": "PASS",
        "time": 5.0676e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getSpeedOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getSpeedOverGround",
        "result": "PASS",
        "time": 0.000112428,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetAltitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetAltitudeError",
        "result": "PASS",
        "time": 4.3021e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetDayOutOfBounds": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetDayOutOfBounds",
        "result": "PASS",
        "time": 3.3077e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetTime": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetTime",
        "result": "PASS",
        "time": 0.000229764,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsStationId": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsStationId",
        "result": "PASS",
        "time": 4.4448e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLowerByOne": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountLowerByOne",
        "result": "PASS",
        "time": 3.6183e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetFixQuality": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetFixQuality",
        "result": "PASS",
        "time": 0.000170686,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetNumberOfSatellites": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetNumberOfSatellites",
        "result": "PASS",
        "time": 3.3049e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetSternWaterSpeedStatus",
        "result": "PASS",
        "time": 2.6588e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testConstructor",
        "result": "PASS",
        "time": 3.9114e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetCourse": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetCourse",
        "result": "PASS",
        "time": 7.6072e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellitesThrows": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetNumberOfSatellitesThrows",
        "result": "PASS",
        "time": 4.8457e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testGetHeading": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testGetHeading",
        "result": "PASS",
        "time": 3.1276e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate": {
        "name": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate",
        "result": "ERROR",
        "time": 0.000225812,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.parser.AISMessageFactoryTest.<init>(AISMessageFactoryTest.java:24)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetOffTrackStatus": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetOffTrackStatus",
        "result": "PASS",
        "time": 4.7451e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testSetTime": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testSetTime",
        "result": "PASS",
        "time": 0.000129181,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.WPLTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.WPLTest.testConstructor",
        "result": "PASS",
        "time": 9.1271e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetDistance": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetDistance",
        "result": "PASS",
        "time": 9.3028e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetYearNegative": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetYearNegative",
        "result": "PASS",
        "time": 3.712e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithEmptyFields": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithEmptyFields",
        "result": "PASS",
        "time": 5.023e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testSetLongitudeOffset": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testSetLongitudeOffset",
        "result": "PASS",
        "time": 6.1945e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsCorrect",
        "result": "PASS",
        "time": 7.093e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithEmptyFields": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithEmptyFields",
        "result": "PASS",
        "time": 0.000104225,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumSubCode": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumSubCode",
        "result": "PASS",
        "time": 2.1468e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLongitude": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLongitude",
        "result": "PASS",
        "time": 7.248e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.minValueIsAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.minValueIsAvailable",
        "result": "PASS",
        "time": 8.404e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetAltitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetAltitudeError",
        "result": "PASS",
        "time": 4.1398e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetAltitudeUnits": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetAltitudeUnits",
        "result": "PASS",
        "time": 5.3328e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetPosition": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetPosition",
        "result": "PASS",
        "time": 0.000136603,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetPosition": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetPosition",
        "result": "PASS",
        "time": 7.5515e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetHorizontalDOP": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetHorizontalDOP",
        "result": "PASS",
        "time": 3.5659e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.zeroIsAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.zeroIsAvailable",
        "result": "PASS",
        "time": 4.757e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetYearThreeDigits": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetYearThreeDigits",
        "result": "PASS",
        "time": 3.24e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetAltitude": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetAltitude",
        "result": "PASS",
        "time": 3.4619e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetStatus": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetStatus",
        "result": "PASS",
        "time": 4.467e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteInfo": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testSetSatelliteInfo",
        "result": "PASS",
        "time": 0.000115876,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testConstructor",
        "result": "PASS",
        "time": 4.4218e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
        "result": "PASS",
        "time": 0.000103592,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder",
        "result": "ERROR",
        "time": 0.000345286,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParse": {
        "name": "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParse",
        "result": "PASS",
        "time": 2.0573e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testConstructor",
        "result": "PASS",
        "time": 2.8929e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetTime": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetTime",
        "result": "PASS",
        "time": 5.0213e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetStatus": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetStatus",
        "result": "PASS",
        "time": 1.5846e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testConstructor",
        "result": "PASS",
        "time": 5.3635e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testSetMagneticHeading": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testSetMagneticHeading",
        "result": "PASS",
        "time": 6.8811e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testSetFeet": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testSetFeet",
        "result": "PASS",
        "time": 0.000107687,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetWaterSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetWaterSpeedStatus",
        "result": "PASS",
        "time": 2.6266e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTimeStamp": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getTimeStamp",
        "result": "PASS",
        "time": 7.282e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRateOfTurnForHeadingChanges": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRateOfTurnForHeadingChanges",
        "result": "PASS",
        "time": 5.499e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar",
        "result": "PASS",
        "time": 0.000370994,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetName": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetName",
        "result": "PASS",
        "time": 7.6564e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeightUnits": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeightUnits",
        "result": "PASS",
        "time": 3.7131e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsNotAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.defaultValueIsNotAvailable",
        "result": "PASS",
        "time": 6.439e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetMonth": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetMonth",
        "result": "PASS",
        "time": 0.000228286,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetHorizontalDOP": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetHorizontalDOP",
        "result": "PASS",
        "time": 6.696e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testIsPerpendicularPassed": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testIsPerpendicularPassed",
        "result": "PASS",
        "time": 1.9037e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testToStringWithAIS": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testToStringWithAIS",
        "result": "PASS",
        "time": 0.000145285,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffHeadingLimit": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedOffHeadingLimit",
        "result": "PASS",
        "time": 4.1344e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testGetRelativeHumidity": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testGetRelativeHumidity",
        "result": "PASS",
        "time": 3.0859e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasSpeedOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasSpeedOverGround",
        "result": "PASS",
        "time": 1.2738e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGSTParser": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGSTParser",
        "result": "PASS",
        "time": 4.7579e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testIsHeadingReferenceInUseTrue": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testIsHeadingReferenceInUseTrue",
        "result": "PASS",
        "time": 8.1535e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetSentenceId": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetSentenceId",
        "result": "PASS",
        "time": 3.7248e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetLongGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetLongGroundSpeed",
        "result": "PASS",
        "time": 5.7258e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getCourseOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getCourseOverGround",
        "result": "PASS",
        "time": 7.311e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKilometres": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testSetSpeedKilometres",
        "result": "PASS",
        "time": 6.669e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testGetStatus": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testGetStatus",
        "result": "PASS",
        "time": 2.745e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetName": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetName",
        "result": "PASS",
        "time": 5.7205e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetVariation": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetVariation",
        "result": "PASS",
        "time": 0.000442959,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
        "result": "PASS",
        "time": 7.8851e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testIsLastFragment": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testIsLastFragment",
        "result": "PASS",
        "time": 6.7662e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsAge": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGetDgpsAge",
        "result": "PASS",
        "time": 7.1187e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithNegativeIndex": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValueWithNegativeIndex",
        "result": "PASS",
        "time": 8.4325e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithInvalidValue": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetDoubleValueWithInvalidValue",
        "result": "PASS",
        "time": 7.9916e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getTypeOfShipAndCargoType": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getTypeOfShipAndCargoType",
        "result": "PASS",
        "time": 7.045e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasCourseOverGround": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasCourseOverGround",
        "result": "PASS",
        "time": 6.773e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testGetSternGroundSpeed",
        "result": "PASS",
        "time": 2.5891e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValue": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testGetStringValue",
        "result": "PASS",
        "time": 4.1765e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLatitudeInDegrees": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getLatitudeInDegrees",
        "result": "PASS",
        "time": 8.021e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCount": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetMessageCount",
        "result": "PASS",
        "time": 3.9102e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasRateOfTurn": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.hasRateOfTurn",
        "result": "PASS",
        "time": 2.6972e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetTime": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetTime",
        "result": "PASS",
        "time": 0.000150941,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithOtherSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithOtherSentence",
        "result": "PASS",
        "time": 2.716e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testGetMagneticHeading": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testGetMagneticHeading",
        "result": "PASS",
        "time": 2.9773e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStarboard": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStarboard",
        "result": "PASS",
        "time": 9.303e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetCorrectedCourse": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetCorrectedCourse",
        "result": "PASS",
        "time": 0.000124768,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetDate": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetDate",
        "result": "PASS",
        "time": 5.7329e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
        "result": "PASS",
        "time": 0.000351725,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HDMTest.testSetHeadingTooHigh": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testSetHeadingTooHigh",
        "result": "PASS",
        "time": 1.3968e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor",
        "result": "ERROR",
        "time": 0.000506829,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigherByOne": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetFieldCountHigherByOne",
        "result": "PASS",
        "time": 3.6946e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKilometres": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testGetSpeedKilometres",
        "result": "PASS",
        "time": 3.0244e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserString": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testVBWParserString",
        "result": "PASS",
        "time": 2.1824e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithExpectedSentence": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testBasicListenerWithExpectedSentence",
        "result": "PASS",
        "time": 5.4161e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToISO8601FourDigitYear": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToISO8601FourDigitYear",
        "result": "PASS",
        "time": 3.7728e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedTrack": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedTrack",
        "result": "PASS",
        "time": 4.5158e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testSetLatitudeOffset": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testSetLatitudeOffset",
        "result": "PASS",
        "time": 4.6735e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeight": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetGeoidalHeight",
        "result": "PASS",
        "time": 9.1543e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetNumberOfFragments": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetNumberOfFragments",
        "result": "PASS",
        "time": 4.7722e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getManouverIndicator": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getManouverIndicator",
        "result": "PASS",
        "time": 9.039e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetTime": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetTime",
        "result": "PASS",
        "time": 4.4359e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumSubCode": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testSetDatumSubCode",
        "result": "PASS",
        "time": 3.8318e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.conversionToKnotsWorks": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.conversionToKnotsWorks",
        "result": "PASS",
        "time": 0.000103356,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getBow": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getBow",
        "result": "PASS",
        "time": 6.293e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getCallSign": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getCallSign",
        "result": "PASS",
        "time": 8.316e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTrip": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testSetTrip",
        "result": "PASS",
        "time": 3.7903e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsAvailable": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.maxValueIsAvailable",
        "result": "PASS",
        "time": 6.232e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetLatitudeOffset": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetLatitudeOffset",
        "result": "PASS",
        "time": 1.8736e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetAltitudeUnits": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetAltitudeUnits",
        "result": "PASS",
        "time": 4.993e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testGetAngle": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testGetAngle",
        "result": "PASS",
        "time": 0.000185095,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotCorrect": {
        "name": "net.sf.marineapi.ais.util.Latitude27Test.largeNegativeValueIsNotCorrect",
        "result": "PASS",
        "time": 9.857e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetSternGroundSpeedStatus",
        "result": "PASS",
        "time": 2.5711e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testConstructor",
        "result": "PASS",
        "time": 2.9402e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetBearingOriginToDestination": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetBearingOriginToDestination",
        "result": "PASS",
        "time": 5.4852e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithNonZeroValues": {
        "name": "net.sf.marineapi.nmea.parser.WPLTest.testSetWaypointWithNonZeroValues",
        "result": "PASS",
        "time": 0.011236781,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testStringConstructor": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testStringConstructor",
        "result": "PASS",
        "time": 3.6595e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testSetMeters": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testSetMeters",
        "result": "PASS",
        "time": 6.7783e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetMonthOutOfBounds": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetMonthOutOfBounds",
        "result": "PASS",
        "time": 3.0787e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testSetIndentifier": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testSetIndentifier",
        "result": "PASS",
        "time": 3.2686e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderDirection": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetRudderDirection",
        "result": "PASS",
        "time": 0.000317201,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPointUnit": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPointUnit",
        "result": "PASS",
        "time": 6.1334e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testIsTrue": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testIsTrue",
        "result": "PASS",
        "time": 2.6435e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testGetFeet": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testGetFeet",
        "result": "PASS",
        "time": 3.4563e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserTalkerId",
        "result": "PASS",
        "time": 2.2189e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDay": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetDay",
        "result": "PASS",
        "time": 9.7957e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
        "result": "PASS",
        "time": 0.00013089,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsValid": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testIsValid",
        "result": "PASS",
        "time": 8.9724e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testSetDate": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testSetDate",
        "result": "PASS",
        "time": 0.000212283,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumCode": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testGetDatumCode",
        "result": "PASS",
        "time": 1.5271e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetErrorEllipseOrientation": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetErrorEllipseOrientation",
        "result": "PASS",
        "time": 4.4887e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfo": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfo",
        "result": "PASS",
        "time": 0.000110069,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MMBTest.testGetInchesOfMercury": {
        "name": "net.sf.marineapi.nmea.parser.MMBTest.testGetInchesOfMercury",
        "result": "PASS",
        "time": 4.301e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testAPBParserTalkerId": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testAPBParserTalkerId",
        "result": "PASS",
        "time": 1.6259e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeedUnit": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testGetSpeedUnit",
        "result": "PASS",
        "time": 0.00015944,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetBearing": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetBearing",
        "result": "PASS",
        "time": 0.000229122,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetInvalidSpeedUnit": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetInvalidSpeedUnit",
        "result": "PASS",
        "time": 2.6997e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testSetTime": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testSetTime",
        "result": "PASS",
        "time": 8.6877e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VBWTest.testSetGroundSpeedStatus": {
        "name": "net.sf.marineapi.nmea.parser.VBWTest.testSetGroundSpeedStatus",
        "result": "PASS",
        "time": 4.4489e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.ZDATest.testGetYear": {
        "name": "net.sf.marineapi.nmea.parser.ZDATest.testGetYear",
        "result": "PASS",
        "time": 0.000109207,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testSetLatitudeError": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testSetLatitudeError",
        "result": "PASS",
        "time": 3.9276e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserString": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testDTMParserString",
        "result": "PASS",
        "time": 1.3369e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceFalse": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testSetReferenceFalse",
        "result": "PASS",
        "time": 5.4346e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderLimit": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderLimit",
        "result": "PASS",
        "time": 4.1531e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testSetSentenceCount": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testSetSentenceCount",
        "result": "PASS",
        "time": 7.8339e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getPositionAccuracy": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.getPositionAccuracy",
        "result": "PASS",
        "time": 6.321e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testGetMeters": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testGetMeters",
        "result": "PASS",
        "time": 5.6428e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToStringFourDigitYear": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToStringFourDigitYear",
        "result": "PASS",
        "time": 0.000147907,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetBearing": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetBearing",
        "result": "PASS",
        "time": 3.8908e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage",
        "result": "ERROR",
        "time": 0.00070952,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
        "result": "PASS",
        "time": 0.000117072,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GGATest.testGGAParser": {
        "name": "net.sf.marineapi.nmea.parser.GGATest.testGGAParser",
        "result": "PASS",
        "time": 5.6114e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getSerialNumber": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getSerialNumber",
        "result": "PASS",
        "time": 6.638e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNulls": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testConstructorWithNulls",
        "result": "PASS",
        "time": 3.7237e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetDay": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetDay",
        "result": "PASS",
        "time": 1.9253e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetSpeed",
        "result": "PASS",
        "time": 4.8058e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRadiusOfTurnForHEadingChanges": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRadiusOfTurnForHEadingChanges",
        "result": "PASS",
        "time": 5.2987e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testToStringTwoDigitYear": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testToStringTwoDigitYear",
        "result": "PASS",
        "time": 6.7418e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testGetDay": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testGetDay",
        "result": "PASS",
        "time": 2.4061e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeedUnit": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetSpeedUnit",
        "result": "PASS",
        "time": 3.3848e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testConstructor": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testConstructor",
        "result": "PASS",
        "time": 9.0051e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testSetArrivalCircleEntered": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testSetArrivalCircleEntered",
        "result": "PASS",
        "time": 1.7048e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
        "result": "PASS",
        "time": 0.000218268,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPoint": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testGetDewPoint",
        "result": "PASS",
        "time": 0.000408737,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPort": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getPort",
        "result": "PASS",
        "time": 6.529e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VHWTest.testIsTrue": {
        "name": "net.sf.marineapi.nmea.parser.VHWTest.testIsTrue",
        "result": "PASS",
        "time": 2.78e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLongitudeInDegrees": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getLongitudeInDegrees",
        "result": "PASS",
        "time": 1.159e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor",
        "result": "ERROR",
        "time": 0.001188053,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.nmea.parser.VLWTest.testSetTotal": {
        "name": "net.sf.marineapi.nmea.parser.VLWTest.testSetTotal",
        "result": "PASS",
        "time": 6.0589e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithShortSentence": {
        "name": "net.sf.marineapi.nmea.parser.GSVTest.testGetSatelliteInfoWithShortSentence",
        "result": "PASS",
        "time": 0.000159154,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackError": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetCrossTrackError",
        "result": "PASS",
        "time": 6.3535e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageIndex": {
        "name": "net.sf.marineapi.nmea.parser.TXTTest.testGetMessageIndex",
        "result": "PASS",
        "time": 3.5957e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testSetTrueDirection": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testSetTrueDirection",
        "result": "PASS",
        "time": 0.000347434,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testConstructorWithValues": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testConstructorWithValues",
        "result": "PASS",
        "time": 2.1838e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage": {
        "name": "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage",
        "result": "ERROR",
        "time": 0.000661229,
        "stackTrace": [
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParserImpl(SentenceFactory.java:243)",
          "net.sf.marineapi.nmea.parser.SentenceFactory.createParser(SentenceFactory.java:101)",
          "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.<init>(AbstractAISMessageListenerTest.java:21)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)",
          "org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)",
          "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
          "org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runners.Suite.runChild(Suite.java:128)",
          "org.junit.runners.Suite.runChild(Suite.java:27)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:363)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
          "org.junit.runner.JUnitCore.run(JUnitCore.java:115)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeHelper(JUnitTestExecutor.java:262)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:315)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:343)",
          "edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:53)",
          "edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)",
          "scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)",
          "scala.util.Try$.apply(Try.scala:209)",
          "edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)",
          "edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)",
          "edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)"
        ]
      },
      "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLatitude": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportBParserTest.hasLatitude",
        "result": "PASS",
        "time": 7.388e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetMagneticVariation": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetMagneticVariation",
        "result": "PASS",
        "time": 0.000102341,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MMBTest.testSetInchesOfMercury": {
        "name": "net.sf.marineapi.nmea.parser.MMBTest.testSetInchesOfMercury",
        "result": "PASS",
        "time": 4.379e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.RMCTest.testGetDirectionOfVariation": {
        "name": "net.sf.marineapi.nmea.parser.RMCTest.testGetDirectionOfVariation",
        "result": "PASS",
        "time": 0.000123503,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testGetHeadingToDestionation": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testGetHeadingToDestionation",
        "result": "PASS",
        "time": 0.000149586,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructorWhenExtended": {
        "name": "net.sf.marineapi.nmea.event.AbstractSentenceListenerTest.testParametrizedConstructorWhenExtended",
        "result": "PASS",
        "time": 1.5678e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPoint": {
        "name": "net.sf.marineapi.nmea.parser.MHUTest.testSetDewPoint",
        "result": "PASS",
        "time": 8.6322e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DBTTest.testSetFathoms": {
        "name": "net.sf.marineapi.nmea.parser.DBTTest.testSetFathoms",
        "result": "PASS",
        "time": 0.00016961,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNull": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testEqualsWithNull",
        "result": "PASS",
        "time": 0.000166412,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.GSTTest.testGetErrorEllipseOrientation": {
        "name": "net.sf.marineapi.nmea.parser.GSTTest.testGetErrorEllipseOrientation",
        "result": "PASS",
        "time": 3.5832e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueWithPrecision": {
        "name": "net.sf.marineapi.nmea.parser.SentenceParserTest.testSetDoubleValueWithPrecision",
        "result": "PASS",
        "time": 0.000273921,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getRateOfTurn": {
        "name": "net.sf.marineapi.ais.parser.AISPositionReportParserTest.getRateOfTurn",
        "result": "PASS",
        "time": 0.000111961,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.util.DateTest.testSetMonth": {
        "name": "net.sf.marineapi.nmea.util.DateTest.testSetMonth",
        "result": "PASS",
        "time": 6.2143e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.APBTest.testIsArrivalCircleEntered": {
        "name": "net.sf.marineapi.nmea.parser.APBTest.testIsArrivalCircleEntered",
        "result": "PASS",
        "time": 1.8756e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeSpeed": {
        "name": "net.sf.marineapi.nmea.parser.MWVTest.testSetNegativeSpeed",
        "result": "PASS",
        "time": 3.9517e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderAngle": {
        "name": "net.sf.marineapi.nmea.parser.HTDTest.testGetCommandedRudderAngle",
        "result": "PASS",
        "time": 4.8296e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.TTMTest.testGetDistanceOfCPA": {
        "name": "net.sf.marineapi.nmea.parser.TTMTest.testGetDistanceOfCPA",
        "result": "PASS",
        "time": 4.3796e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStern": {
        "name": "net.sf.marineapi.ais.parser.AISMessage24ParserTest.getStern",
        "result": "PASS",
        "time": 6.347e-06,
        "stackTrace": []
      },
      "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithLegacyRMC": {
        "name": "net.sf.marineapi.provider.PositionProviderTest.testSentenceReadWithLegacyRMC",
        "result": "PASS",
        "time": 0.003464054,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDMTest.testGetRadioChannel": {
        "name": "net.sf.marineapi.nmea.parser.VDMTest.testGetRadioChannel",
        "result": "PASS",
        "time": 9.2198e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.VDRTest.testSetSpeed": {
        "name": "net.sf.marineapi.nmea.parser.VDRTest.testSetSpeed",
        "result": "PASS",
        "time": 5.4556e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers": {
        "name": "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
        "result": "PASS",
        "time": 0.000280854,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.DTMTest.testSetName": {
        "name": "net.sf.marineapi.nmea.parser.DTMTest.testSetName",
        "result": "PASS",
        "time": 1.8743e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.parser.HDMTest.testGetHeading": {
        "name": "net.sf.marineapi.nmea.parser.HDMTest.testGetHeading",
        "result": "PASS",
        "time": 1.3206e-05,
        "stackTrace": []
      },
      "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseProprietary": {
        "name": "net.sf.marineapi.nmea.sentence.TalkerIdTest.testParseProprietary",
        "result": "PASS",
        "time": 1.7786e-05,
        "stackTrace": []
      }
    }
  },
  "expected": "ERROR",
  "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
  "polluters": [
    {
      "time": {
        "startTime": 1704497092265,
        "endTime": 1704497096995,
        "elapsedSeconds": 4.729999780654907
      },
      "index": 0,
      "deps": [
        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
      ],
      "cleanerData": {
        "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
        "time": {
          "addTime": {
            "startTime": 1704497096998,
            "endTime": 1704497099585,
            "elapsedSeconds": 2.5879998207092285
          },
          "totalTime": {
            "startTime": 1704497096998,
            "endTime": 1704497448665,
            "elapsedSeconds": 351.6670000553131
          }
        },
        "expected": "ERROR",
        "isolationResult": "PASS",
        "cleaners": [
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 570,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered"
            ],
            "orderFound": 0,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497099585,
                "elapsedSeconds": 2.5879998207092285
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497448665,
                "elapsedSeconds": 351.6670000553131
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser"
            ],
            "orderFound": 1,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497236542,
                "elapsedSeconds": 139.54400062561035
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497449733,
                "elapsedSeconds": 352.7350001335144
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers"
            ],
            "orderFound": 2,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497237257,
                "elapsedSeconds": 140.25900030136108
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497450793,
                "elapsedSeconds": 353.79500007629395
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser"
            ],
            "orderFound": 3,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497237603,
                "elapsedSeconds": 140.60500049591064
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497451849,
                "elapsedSeconds": 354.8510000705719
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId"
            ],
            "orderFound": 4,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497237994,
                "elapsedSeconds": 140.99600052833557
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497452938,
                "elapsedSeconds": 355.94000005722046
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered"
            ],
            "orderFound": 5,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497238331,
                "elapsedSeconds": 141.33300065994263
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497454009,
                "elapsedSeconds": 357.0110001564026
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull"
            ],
            "orderFound": 6,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497238698,
                "elapsedSeconds": 141.70000076293945
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497455084,
                "elapsedSeconds": 358.0860002040863
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser"
            ],
            "orderFound": 7,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497239084,
                "elapsedSeconds": 142.0860002040863
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497456166,
                "elapsedSeconds": 359.16799998283386
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser"
            ],
            "orderFound": 8,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497239492,
                "elapsedSeconds": 142.49400067329407
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497457247,
                "elapsedSeconds": 360.24900007247925
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr"
            ],
            "orderFound": 9,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497239925,
                "elapsedSeconds": 142.92700052261353
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497458338,
                "elapsedSeconds": 361.3400001525879
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser"
            ],
            "orderFound": 10,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497240441,
                "elapsedSeconds": 143.44300055503845
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497459397,
                "elapsedSeconds": 362.3990001678467
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser"
            ],
            "orderFound": 11,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497240889,
                "elapsedSeconds": 143.8910002708435
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497460462,
                "elapsedSeconds": 363.46399998664856
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom"
            ],
            "orderFound": 12,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497241389,
                "elapsedSeconds": 144.39100050926208
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497461526,
                "elapsedSeconds": 364.52800011634827
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance"
            ],
            "orderFound": 13,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497241855,
                "elapsedSeconds": 144.85700035095215
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497462606,
                "elapsedSeconds": 365.6080000400543
              }
            }
          },
          {
            "dependentTest": "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            "originalSize": 1,
            "cleanerTests": [
              "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString"
            ],
            "orderFound": 14,
            "time": {
              "addTime": {
                "startTime": 1704497096998,
                "endTime": 1704497242244,
                "elapsedSeconds": 145.24600052833557
              },
              "totalTime": {
                "startTime": 1704497096998,
                "endTime": 1704497463677,
                "elapsedSeconds": 366.67900013923645
              }
            }
          }
        ]
      }
    }
  ],
  "hash": "64e87f61fe0dc7194d0c8be1eb266d7f",
  "flakyClass": "OD"
}
