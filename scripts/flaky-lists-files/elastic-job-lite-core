{
  "dts": [
    {
      "name": "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsShutdownAlready",
      "intended": {
        "order": [
          "io.elasticjob.lite.api.JobSchedulerTest.assertInit",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertAfterJobExecutedWhenIsAllCompleted",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertBeforeJobExecutedWhenIsNotAllStartedAndNotTimeout",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertAfterJobExecutedWhenIsAllCompletedAndTimeout",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertBeforeJobExecutedWhenIsNotAllStartedAndTimeout",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertBeforeJobExecutedWhenIsAllStarted",
          "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest.assertAfterJobExecutedWhenIsAllCompletedAndNotTimeout",
          "io.elasticjob.lite.api.ShardingContextTest.assertNew",
          "io.elasticjob.lite.api.ShardingContextTest.assertToString",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForServersLessThanShardingCountAliquantFor8ShardingCountAnd3Servers",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForZeroServer",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForServersLessThanShardingCountAliquot",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForServersLessThanShardingCountAliquantFor10ShardingCountAnd3Servers",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForServersMoreThanShardingCount",
          "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest.shardingForOneServer",
          "io.elasticjob.lite.api.strategy.impl.OdevitySortByNameJobShardingStrategyTest.assertShardingByDesc",
          "io.elasticjob.lite.api.strategy.impl.OdevitySortByNameJobShardingStrategyTest.assertShardingByAsc",
          "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest.assertSharding1",
          "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest.assertSharding2",
          "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest.assertSharding3",
          "io.elasticjob.lite.api.strategy.JobInstanceTest.assertGetIp",
          "io.elasticjob.lite.api.strategy.JobInstanceTest.assertGetJobInstanceId",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenStrategyClassInvalid",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenClassNotFound",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetDefaultStrategy",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenNotStrategyClass",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategySuccess",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildAllProperties",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildWhenJobNameIsNull",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildRequiredProperties",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildWhenOptionalParametersIsNull",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildWhenCronIsNull",
          "io.elasticjob.lite.config.JobCoreConfigurationTest.assertBuildWhenTotalSHardingCountIsNegative",
          "io.elasticjob.lite.config.LiteJobConfigurationTest.assertBuildAllProperties",
          "io.elasticjob.lite.config.LiteJobConfigurationTest.assertIsFailover",
          "io.elasticjob.lite.config.LiteJobConfigurationTest.assertBuildRequiredProperties",
          "io.elasticjob.lite.config.LiteJobConfigurationTest.assertIsNotFailover",
          "io.elasticjob.lite.config.LiteJobConfigurationTest.assertBuildWhenOptionalParametersIsNull",
          "io.elasticjob.lite.context.TaskContextTest.assertMetaInfoFromWithMetaInfo",
          "io.elasticjob.lite.context.TaskContextTest.assertMetaInfoFromWithMetaInfoWithoutShardingItems",
          "io.elasticjob.lite.context.TaskContextTest.assertTaskContextFrom",
          "io.elasticjob.lite.context.TaskContextTest.assertNewWithoutSlaveId",
          "io.elasticjob.lite.context.TaskContextTest.assertGetMetaInfo",
          "io.elasticjob.lite.context.TaskContextTest.assertGetTaskName",
          "io.elasticjob.lite.context.TaskContextTest.assertGetIdForUnassignedSlave",
          "io.elasticjob.lite.context.TaskContextTest.assertSetSlaveId",
          "io.elasticjob.lite.context.TaskContextTest.assertSetIdle",
          "io.elasticjob.lite.context.TaskContextTest.assertGetExecutorId",
          "io.elasticjob.lite.context.TaskContextTest.assertNew",
          "io.elasticjob.lite.context.TaskContextTest.assertMetaInfoFromWithTaskIdWithoutShardingItems",
          "io.elasticjob.lite.context.TaskContextTest.assertMetaInfoFromWithTaskId",
          "io.elasticjob.lite.event.JobEventBusTest.assertPostWithoutListener",
          "io.elasticjob.lite.event.JobEventBusTest.assertRegisterFailure",
          "io.elasticjob.lite.event.JobEventBusTest.assertPost",
          "io.elasticjob.lite.event.JobExecutionEventTest.assertNewJobExecutionEvent",
          "io.elasticjob.lite.event.JobExecutionEventTest.assertExecutionSuccess",
          "io.elasticjob.lite.event.JobExecutionEventTest.assertExecutionFailure",
          "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest.assertCreateJobEventListenerSuccess",
          "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest.assertCreateJobEventListenerFailure",
          "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest.assertGetDataSource",
          "io.elasticjob.lite.event.rdb.JobEventRdbIdentityTest.assertGetIdentity",
          "io.elasticjob.lite.event.rdb.JobEventRdbListenerTest.assertPostJobStatusTraceEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbListenerTest.assertPostJobExecutionEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithFields",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithErrorSort",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithErrorFields",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithSort",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithTime",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithPageSizeAndNumber",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithErrorPageSizeAndNumber",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithErrorSort",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobExecutionEventsWithFields",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithErrorPageSizeAndNumber",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithSort",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithTime",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithPageSizeAndNumber",
          "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest.assertFindJobStatusTraceEventsWithErrorFields",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenSuccessAndConflict",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenSuccess",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEventWhenFailoverWithTaskStagingState",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailure",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailureAndMessageExceed",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertFindJobExecutionEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobExecutionEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEventWhenFailoverWithTaskFailedState",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailureAndConflict",
          "io.elasticjob.lite.exception.ExceptionUtilTest.assertTransformWithNull",
          "io.elasticjob.lite.exception.ExceptionUtilTest.assertTransformWithException",
          "io.elasticjob.lite.exception.ExceptionUtilTest.assertTransformWithError",
          "io.elasticjob.lite.exception.JobConfigurationExceptionTest.assertGetMessage",
          "io.elasticjob.lite.exception.JobConfigurationExceptionTest.assertGetCause",
          "io.elasticjob.lite.exception.JobExecutionEnvironmentExceptionTest.assertGetMessage",
          "io.elasticjob.lite.exception.JobStatisticExceptionTest.assertGetCause",
          "io.elasticjob.lite.exception.JobSystemExceptionTest.assertGetMessage",
          "io.elasticjob.lite.exception.JobSystemExceptionTest.assertGetCause",
          "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest.assertGetExecutorServiceHandlerForSameThread",
          "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest.assertGetExecutorServiceHandlerForConcurrent",
          "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest.assertRemove",
          "io.elasticjob.lite.executor.handler.impl.DefaultJobExceptionHandlerTest.assertHandleException",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertJobPropertiesEnumFromValidValue",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertGetWhenValueIsEmpty",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertGetWhenValueIsNotEmpty",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertJobPropertiesEnumFromInvalidValue",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertPutNullValue",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertPutInvalidKey",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertPutSuccess",
          "io.elasticjob.lite.executor.handler.JobPropertiesTest.assertJson",
          "io.elasticjob.lite.executor.JobExecutorFactoryTest.assertGetJobExecutorWhenJobClassWhenUnsupportedJob",
          "io.elasticjob.lite.executor.JobExecutorFactoryTest.assertGetJobExecutorForDataflowJob",
          "io.elasticjob.lite.executor.JobExecutorFactoryTest.assertGetJobExecutorTwice",
          "io.elasticjob.lite.executor.JobExecutorFactoryTest.assertGetJobExecutorForScriptJob",
          "io.elasticjob.lite.executor.JobExecutorFactoryTest.assertGetJobExecutorForSimpleJob",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyAndProcessFailureWithExceptionForStreamingProcess",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNullAndEmpty",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyForUnStreamingProcessAndMultipleShardingItems",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyForStreamingProcessAndMultipleShardingItems",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyForUnStreamingProcessAndSingleShardingItem",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyForStreamingProcessAndSingleShardingItem",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyAndIsNotEligibleForJobRunningForStreamingProcess",
          "io.elasticjob.lite.executor.type.DataflowJobExecutorTest.assertExecuteWhenFetchDataIsNotEmptyAndIsEligibleForJobRunningForStreamingProcess",
          "io.elasticjob.lite.executor.type.ScriptJobExecutorTest.assertExecuteWhenExecuteFailureForMultipleShardingItems",
          "io.elasticjob.lite.executor.type.ScriptJobExecutorTest.assertExecuteSuccessForSingleShardingItems",
          "io.elasticjob.lite.executor.type.ScriptJobExecutorTest.assertExecuteWhenCommandLineIsEmpty",
          "io.elasticjob.lite.executor.type.ScriptJobExecutorTest.assertExecuteSuccessForMultipleShardingItems",
          "io.elasticjob.lite.executor.type.ScriptJobExecutorTest.assertExecuteWhenExecuteFailureForSingleShardingItems",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceWithMisfireIsEmpty",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceWithMisfireIsNotEmptyButIsNotEligibleForJobRunning",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceWithMisfire",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertAfterJobExecutedFailure",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccessForMultipleShardingItems",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowExceptionForMultipleShardingItems",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenCheckMaxTimeDiffSecondsIntolerable",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertBeforeJobExecutedFailure",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenPreviousJobStillRunning",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertNewExecutorWithDefaultHandlers",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenShardingItemsIsEmpty",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowExceptionForSingleShardingItem",
          "io.elasticjob.lite.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccessForSingleShardingItems",
          "io.elasticjob.lite.executor.type.WrongJobExecutorTest.assertWrongJobExecutorWithMultipleItems",
          "io.elasticjob.lite.executor.type.WrongJobExecutorTest.assertWrongJobExecutorWithSingleItem",
          "io.elasticjob.lite.internal.config.ConfigurationNodeTest.assertIsConfigPath",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertLoadDirectly",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertLoadFromCacheButNull",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertPersistNewJobConfiguration",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertIsMaxTimeDiffSecondsTolerableWithDefaultValue",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertIsNotMaxTimeDiffSecondsTolerable",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertPersistExistedJobConfiguration",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertIsMaxTimeDiffSecondsTolerable",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertLoadFromCache",
          "io.elasticjob.lite.internal.config.ConfigurationServiceTest.assertPersistJobConfigurationForJobConflict",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertFromJsonForScriptJob",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertFromJsonForDataflowJob",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertToJsonForDataflowJob",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertToJsonForScriptJob",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertFromJsonForSimpleJob",
          "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest.assertToJsonForSimpleJob",
          "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathButNotUpdate",
          "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsNotCronPath",
          "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertStart",
          "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
          "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateButCannotFindJob",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerDisableWithoutLeader",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithLeader",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServerButJobInstanceIsShutdown",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderAbdicationWhenLeaderDisable",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertStart",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenAddLeaderInstancePath",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderAbdicationWhenFollowerDisable",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertIsNotLeaderInstancePathAndServerPath",
          "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithoutAvailableServers",
          "io.elasticjob.lite.internal.election.LeaderNodeTest.assertIsLeaderInstancePath",
          "io.elasticjob.lite.internal.election.LeaderNodeTest.assertIsNotLeaderInstancePath",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertElectLeaderExecutionCallbackWithoutLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithoutLeaderAndAvailableServers",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertRemoveLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithoutLeaderWithAvailableServers",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertElectLeaderExecutionCallbackWithLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertHasLeader",
          "io.elasticjob.lite.internal.election.LeaderServiceTest.assertElectLeader",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertFailoverSettingsChangedJobListenerWhenIsFailoverPathButNotUpdate",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertFailoverSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButEnableFailover",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsNotNodeRemoved",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenFailoverDisabled",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertStart",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertFailoverSettingsChangedJobListenerWhenIsNotFailoverPath",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertFailoverSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButDisableFailover",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
          "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsNotInstancesPath",
          "io.elasticjob.lite.internal.failover.FailoverNodeTest.assertGetItemsNode",
          "io.elasticjob.lite.internal.failover.FailoverNodeTest.assertGetItemWhenNotExecutionFailoverPath",
          "io.elasticjob.lite.internal.failover.FailoverNodeTest.assertGetItemByExecutionFailoverPath",
          "io.elasticjob.lite.internal.failover.FailoverNodeTest.assertGetExecutionFailoverNode",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertUpdateFailoverComplete",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertSetCrashedFailoverFlagWhenItemIsAssigned",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverIfUnnecessaryWhenServerIsNotReady",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalTakeOffItems",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverIfUnnecessaryWhenItemsRootNodeIsEmpty",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverIfNecessary",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertRemoveFailoverInfo",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverIfUnnecessaryWhenItemsRootNodeNotExisted",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItemsIfShutdown",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertSetCrashedFailoverFlagWhenItemIsNotAssigned",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
          "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertStartedNodeRemovedJobListenerWhenIsNotStartedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertStart",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertCompletedNodeRemovedJobListenerWhenIsNotCompletedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertCompletedNodeRemovedJobListenerWhenIsNotRemoved",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertStartedNodeRemovedJobListenerWhenIsNotRemoved",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertStartedNodeRemovedJobListenerWhenIsRemovedAndStartedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest.assertCompletedNodeRemovedJobListenerWhenIsRemovedAndCompletedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertIsStartedRootNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertIsCompletedRootNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertIsNotStartedRootNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertGetStartedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertIsNotCompletedRootNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest.assertGetCompletedNode",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertRegisterComplete",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsAllStarted",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertClearAllCompletedInfo",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertClearAllStartedInfo",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertRegisterStart",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsNotAllStarted",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsNotAllCompleted",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsNotAllStartedWhenRootNodeIsNotExisted",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsAllCompleted",
          "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest.assertIsNotAllCompletedWhenRootNodeIsNotExisted",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertIsLocalInstancePath",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertIsNotInstancePath",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertIsInstancePath",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertGetInstanceFullPath",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertGetLocalInstancePath",
          "io.elasticjob.lite.internal.instance.InstanceNodeTest.assertIsNotLocalInstancePath",
          "io.elasticjob.lite.internal.instance.InstanceServiceTest.assertRemoveInstance",
          "io.elasticjob.lite.internal.instance.InstanceServiceTest.assertClearTriggerFlag",
          "io.elasticjob.lite.internal.instance.InstanceServiceTest.assertGetAvailableJobInstances",
          "io.elasticjob.lite.internal.instance.InstanceServiceTest.assertIsLocalJobInstanceExisted",
          "io.elasticjob.lite.internal.instance.InstanceServiceTest.assertPersistOnline"
        ],
        "result": "PASS",
        "testRunId": "1688753591864-873c5178-da76-41ea-a48f-f182a94e75b1"
      },
      "revealed": {
        "order": [
          "io.elasticjob.lite.exception.JobStatisticExceptionTest.assertGetCause",
          "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertUpdateJobConfiguration",
          "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
          "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertRegisterStartUpInfo",
          "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
          "io.elasticjob.lite.util.json.GsonFactoryTest.assertRegisterTypeAdapter",
          "io.elasticjob.lite.util.json.GsonFactoryTest.assertGetGson",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertGetJobNodeData",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertExecuteInTransactionSuccess",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertReplaceJobNode",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertGetJobNodeDataDirectly",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertRemoveJobNodeIfNeeded",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertExecuteInTransactionFailure",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertAddDataListener",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertIsJobNodeExisted",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertCreateJobNodeIfNotNeeded",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertUpdateJobNode",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertRemoveJobNodeIfNotNeeded",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertGetRegistryCenterTime",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertGetJobNodeChildrenKeys",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertCreateJobNodeIfNeeded",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertCreateJobNodeIfRootJobNodeIsNotExist",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertAddConnectionStateListener",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertFillEphemeralJobNode",
          "io.elasticjob.lite.internal.storage.JobNodeStorageTest.assertFillJobNode",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailure",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEventWhenFailoverWithTaskFailedState",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailureAndMessageExceed",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobStatusTraceEventWhenFailoverWithTaskStagingState",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenFailureAndConflict",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenSuccessAndConflict",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertFindJobExecutionEvent",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertUpdateJobExecutionEventWhenSuccess",
          "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest.assertAddJobExecutionEvent",
          "io.elasticjob.lite.api.JobSchedulerTest.assertInit",
          "io.elasticjob.lite.internal.reconcile.ReconcileServiceTest.assertReconcile",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertShutdownJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertRescheduleJobWhenTriggerIsNull",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertIsPausedFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertTriggerJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertPauseJobFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertTriggerJobFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertResumeJobSuccess",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertIsPausedIfTriggerStateIsPaused",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertShutdownSuccess",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertRescheduleJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertIsPausedIfTriggerStateIsNormal",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertTriggerJobSuccess",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertRescheduleJobSuccess",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertRescheduleJobFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertPauseJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertIsPauseJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertResumeJobFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertResumeJobIfShutdown",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertShutdownFailure",
          "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest.assertPauseJobSuccess",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenNotStrategyClass",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenStrategyClassInvalid",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategyFailureWhenClassNotFound",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetStrategySuccess",
          "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest.assertGetDefaultStrategy"
        ],
        "result": "ERROR",
        "testRunId": "1688753763208-49fb5b42-f332-453a-85e0-17297a0d2cee"
      },
      "type": "OD"
    }
  ]
}
